package com.runwaysdk.jstest;

@com.runwaysdk.business.ClassSignature(hash = 220977573)
/**
 * This class is generated automatically.
 * DO NOT MAKE CHANGES TO IT - THEY WILL BE OVERWRITTEN
 * Custom business logic should be added to TestWarning.java
 *
 * @author Autogenerated by RunwaySDK
 */
public abstract class TestWarningBase extends com.runwaysdk.business.Warning implements com.runwaysdk.generation.loader.Reloadable
{
  public final static String CLASS = "com.runwaysdk.jstest.TestWarning";
  public static java.lang.String ID = "id";
  public static java.lang.String WARNINGCHAR = "warningChar";
  public static java.lang.String WARNINGINT = "warningInt";
  private static final long serialVersionUID = 220977573;
  
  public TestWarningBase()
  {
    super();
  }
  
  public String getId()
  {
    return getValue(ID);
  }
  
  public void validateId()
  {
    this.validateAttribute(ID);
  }
  
  public static com.runwaysdk.dataaccess.MdAttributeDAOIF getIdMd()
  {
    com.runwaysdk.dataaccess.MdClassDAOIF mdClassIF = com.runwaysdk.dataaccess.metadata.MdClassDAO.getMdClassDAO(com.runwaysdk.jstest.TestWarning.CLASS);
    return mdClassIF.definesAttribute(ID);
  }
  
  public String getWarningChar()
  {
    return getValue(WARNINGCHAR);
  }
  
  public void validateWarningChar()
  {
    this.validateAttribute(WARNINGCHAR);
  }
  
  public static com.runwaysdk.dataaccess.MdAttributeDAOIF getWarningCharMd()
  {
    com.runwaysdk.dataaccess.MdClassDAOIF mdClassIF = com.runwaysdk.dataaccess.metadata.MdClassDAO.getMdClassDAO(com.runwaysdk.jstest.TestWarning.CLASS);
    return mdClassIF.definesAttribute(WARNINGCHAR);
  }
  
  public void setWarningChar(String value)
  {
    if(value == null)
    {
      setValue(WARNINGCHAR, "");
    }
    else
    {
      setValue(WARNINGCHAR, value);
    }
  }
  
  public Integer getWarningInt()
  {
    return com.runwaysdk.constants.MdAttributeIntegerUtil.getTypeSafeValue(getValue(WARNINGINT));
  }
  
  public void validateWarningInt()
  {
    this.validateAttribute(WARNINGINT);
  }
  
  public static com.runwaysdk.dataaccess.MdAttributeDAOIF getWarningIntMd()
  {
    com.runwaysdk.dataaccess.MdClassDAOIF mdClassIF = com.runwaysdk.dataaccess.metadata.MdClassDAO.getMdClassDAO(com.runwaysdk.jstest.TestWarning.CLASS);
    return mdClassIF.definesAttribute(WARNINGINT);
  }
  
  public void setWarningInt(Integer value)
  {
    if(value == null)
    {
      setValue(WARNINGINT, "");
    }
    else
    {
      setValue(WARNINGINT, java.lang.Integer.toString(value));
    }
  }
  
  protected String getDeclaredType()
  {
    return CLASS;
  }
  
  public java.lang.String localize(java.util.Locale locale)
  {
    java.lang.String message = super.localize(locale);
    message = replace(message, "{id}", this.getId());
    message = replace(message, "{warningChar}", this.getWarningChar());
    message = replace(message, "{warningInt}", this.getWarningInt());
    return message;
  }
  
  public String toString()
  {
    if (this.isNew())
    {
      return "New: "+ this.getClassDisplayLabel();
    }
    else
    {
      return super.toString();
    }
  }
}
