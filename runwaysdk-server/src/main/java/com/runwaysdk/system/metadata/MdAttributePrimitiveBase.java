package com.runwaysdk.system.metadata;

@com.runwaysdk.business.ClassSignature(hash = 1072297900)
/**
 * This class is generated automatically.
 * DO NOT MAKE CHANGES TO IT - THEY WILL BE OVERWRITTEN
 * Custom business logic should be added to MdAttributePrimitive.java
 *
 * @author Autogenerated by RunwaySDK
 */
public abstract class MdAttributePrimitiveBase extends com.runwaysdk.system.metadata.MdAttributeConcrete
{
  public final static String CLASS = "com.runwaysdk.system.metadata.MdAttributePrimitive";
  public static java.lang.String EXPRESSION = "expression";
  public static java.lang.String ISEXPRESSION = "isExpression";
  private static final long serialVersionUID = 1072297900;
  
  public MdAttributePrimitiveBase()
  {
    super();
  }
  
  public String getExpression()
  {
    return getValue(EXPRESSION);
  }
  
  public void validateExpression()
  {
    this.validateAttribute(EXPRESSION);
  }
  
  public static com.runwaysdk.dataaccess.MdAttributeTextDAOIF getExpressionMd()
  {
    com.runwaysdk.dataaccess.MdClassDAOIF mdClassIF = com.runwaysdk.dataaccess.metadata.MdClassDAO.getMdClassDAO(com.runwaysdk.system.metadata.MdAttributePrimitive.CLASS);
    return (com.runwaysdk.dataaccess.MdAttributeTextDAOIF)mdClassIF.definesAttribute(EXPRESSION);
  }
  
  public void setExpression(String value)
  {
    if(value == null)
    {
      setValue(EXPRESSION, "");
    }
    else
    {
      setValue(EXPRESSION, value);
    }
  }
  
  public Boolean getIsExpression()
  {
    return com.runwaysdk.constants.MdAttributeBooleanUtil.getTypeSafeValue(getValue(ISEXPRESSION));
  }
  
  public void validateIsExpression()
  {
    this.validateAttribute(ISEXPRESSION);
  }
  
  public static com.runwaysdk.dataaccess.MdAttributeBooleanDAOIF getIsExpressionMd()
  {
    com.runwaysdk.dataaccess.MdClassDAOIF mdClassIF = com.runwaysdk.dataaccess.metadata.MdClassDAO.getMdClassDAO(com.runwaysdk.system.metadata.MdAttributePrimitive.CLASS);
    return (com.runwaysdk.dataaccess.MdAttributeBooleanDAOIF)mdClassIF.definesAttribute(ISEXPRESSION);
  }
  
  public void setIsExpression(Boolean value)
  {
    if(value == null)
    {
      setValue(ISEXPRESSION, "");
    }
    else
    {
      setValue(ISEXPRESSION, java.lang.Boolean.toString(value));
    }
  }
  
  protected String getDeclaredType()
  {
    return CLASS;
  }
  
  public static MdAttributePrimitive get(String id)
  {
    return (MdAttributePrimitive) com.runwaysdk.business.Business.get(id);
  }
  
  public static MdAttributePrimitive getByKey(String key)
  {
    return (MdAttributePrimitive) com.runwaysdk.business.Business.get(CLASS, key);
  }
  
  public static MdAttributePrimitive lock(java.lang.String id)
  {
    MdAttributePrimitive _instance = MdAttributePrimitive.get(id);
    _instance.lock();
    
    return _instance;
  }
  
  public static MdAttributePrimitive unlock(java.lang.String id)
  {
    MdAttributePrimitive _instance = MdAttributePrimitive.get(id);
    _instance.unlock();
    
    return _instance;
  }
  
  public String toString()
  {
    if (this.isNew())
    {
      return "New: "+ this.getClassDisplayLabel();
    }
    else
    {
      return super.toString();
    }
  }
}
