[






{
"title": "Introduction to Runway SDK",
"tags": "introduction",
"keywords": "homepage",
"url": "index.html",
"summary": "Runway SDK is an enterprise, data intelligence web application framework"
}
,



{
"title": "About the team",
"tags": "getting_started",
"keywords": "terraframe, gis, runway",
"url": "mydoc_about.html",
"summary": "A passion for technology"
}
,



{
"title": "About Ruby, Gems, Bundler, and other prerequisites",
"tags": "getting_startedtroubleshooting",
"keywords": "",
"url": "mydoc_about_ruby_gems_etc.html",
"summary": "Ruby is a programming language you must have on your computer in order to build Jekyll locally. Ruby has various gems (or plugins) that provide various functionality. Each Jekyll project usually requires certain gems."
}
,



{
"title": "Tooltips",
"tags": "formatting",
"keywords": "popovers, tooltips, user interface text, glossaries, definitions",
"url": "mydoc_adding_tooltips.html",
"summary": "You can add tooltips to any word, such as an acronym or specialized term. Tooltips work well for glossary definitions, because you don't have to keep repeating the definition, nor do you assume the reader already knows the word's meaning."
}
,



{
"title": "Alerts",
"tags": "formatting",
"keywords": "notes, tips, cautions, warnings, admonitions",
"url": "mydoc_alerts.html",
"summary": "You can insert notes, tips, warnings, and important alerts in your content. These notes make use of Bootstrap styling and are available through data references such as site.data.alerts.note."
}
,



{
"title": "Aspect Oriented Programming (AOP)",
"tags": "aspects",
"keywords": "terraframe, runway, aspects",
"url": "mydoc_aspects_introduction.html",
"summary": "Covers the basics of using aspects within Runway"
}
,



{
"title": "Atom Text Editor",
"tags": "",
"keywords": "atom, text editor,",
"url": "mydoc_atom_text_editor.html",
"summary": "Atom is a free text editor that is a favorite tool of many writers because it is free. This page provides some tips for using Atom."
}
,



{
"title": "Build arguments",
"tags": "publishing",
"keywords": "building, serving, serve, build",
"url": "mydoc_build_arguments.html",
"summary": "You use various build arguments with your Jekyll project. You can also create shell scripts to act as shortcuts for long build commands. You can store the commands in iTerm as profiles as well."
}
,



{
"title": "10. Configure the build scripts",
"tags": "publishing",
"keywords": "build scripts, generating outputs, building, publishing",
"url": "mydoc_build_scripts.html",
"summary": "You need to customize the build scripts. These script automate the publishing of your PDFs and web outputs through shell scripts on the command line."
}
,



{
"title": "Code samples",
"tags": "formatting",
"keywords": "dcode samples syntax highlighting",
"url": "mydoc_code_samples.html",
"summary": "You can use fenced code blocks with the language specified after the first set of backtick fences."
}
,



{
"title": "Collections",
"tags": "content_types",
"keywords": "groups, api, structure",
"url": "mydoc_collections.html",
"summary": "Collections are useful if you want to loop through a special folder of pages that you make available in a content API. You could also use collections if you have a set of articles that you want to treat differently from the other content, with a different layout or format."
}
,



{
"title": "Commenting on files",
"tags": "navigation",
"keywords": "annotations, comments, feedback",
"url": "mydoc_commenting_on_files.html",
"summary": "You can add a button to your pages that allows people to add comments."
}
,



{
"title": "Conditional logic",
"tags": "single_sourcing",
"keywords": "if else logic, conditions, conditional attributes, conditional filtering",
"url": "mydoc_conditional_logic.html",
"summary": "You can implement advanced conditional logic that includes if statements, or statements, unless, and more. This conditional logic facilitates single sourcing scenarios in which you're outputting the same content for different audiences."
}
,



{
"title": "Content reuse",
"tags": "single_sourcing",
"keywords": "includes, conref, dita, transclusion, transclude, inclusion, reference",
"url": "mydoc_content_reuse.html",
"summary": "You can reuse chunks of content by storing these files in the includes folder. You then choose to include the file where you need it. This works similar to conref in DITA, except that you can include the file in any content type."
}
,



{
"title": "Excluding files",
"tags": "single_sourcing",
"keywords": "exclusion, separating outputs, removing files from outputs",
"url": "mydoc_exluding_files.html",
"summary": "By default, all the files in your Jekyll project are included in the output (this differs from DITA projects, which don't include files unless noted on the map). If you're single sourcing, you'll need to exclude the files that shouldn't be included in the output. The sidebar doesn't control inclusion or exclusion."
}
,



{
"title": "FAQ layout",
"tags": "special_layouts",
"keywords": "frequently asked questions, FAQ, question and answer, collapsible sections, expand, collapse",
"url": "mydoc_faq_layout.html",
"summary": "You can use an accordion-layout that takes advantage of Bootstrap styling. This is useful for an FAQ page."
}
,



{
"title": "Road Map",
"tags": "",
"keywords": "",
"url": "mydoc_future_roadmap.html",
"summary": ""
}
,



{
"title": "Generating PDFs",
"tags": "publishingsingle_sourcingcontent_types",
"keywords": "PDF, prince, prince XML, ant, xsl fo",
"url": "mydoc_generating_pdfs.html",
"summary": "You can generate a PDF from your Jekyll project. You do this by creating a web version of your project that is printer friendly. You then use utility called Prince to iterate through the pages and create a PDF from them. It works quite well and gives you complete control to customize the PDF output through CSS, including page directives and dynamic tags from Prince."
}
,



{
"title": "Getting started with GeoPrism",
"tags": "getting_started",
"keywords": "",
"url": "mydoc_getting_started.html",
"summary": "GeoPrism is an integrated platform for data management and visualization."
}
,



{
"title": "Glossary layout",
"tags": "formattingspecial_layouts",
"keywords": "definitions, glossaries, terms, style guide",
"url": "mydoc_glossary.html",
"summary": "Your glossary page can take advantage of definitions stored in a data file. This gives you the ability to reuse the same definition in multiple places. Additionally, you can use Bootstrap classes to arrange your definition list horizontally."
}
,



{
"title": "Help APIs and UI tooltips",
"tags": "publishingsingle_sourcingcontent_types",
"keywords": "API, content API, UI text, inline help, context-sensitive help, popovers, tooltips",
"url": "mydoc_help_api.html",
"summary": "You can loop through files and generate a JSON file that developers can consume like a help API. Developers can pull in values from the JSON into interface elements, styling them as popovers for user interface text, for example. The beauty of this method is that the UI text remains in the help system (or at least in a single JSON file delivered to the dev team) and isn't hard-coded into the UI."
}
,



{
"title": "Links",
"tags": "formattingnavigation",
"keywords": "links, hyperlinks, cross references, related links, relationship tables",
"url": "mydoc_hyperlinks.html",
"summary": "When creating links, you can use standard HTML or Markdown formatting. However, you can also implement an automated approach to linking that makes linking much less error-prone (meaning less chances of broken links in your output) and requiring less effort."
}
,



{
"title": "Icons",
"tags": "formatting",
"keywords": "font icons, buttons, images, vectors, font awesome, glyphicons",
"url": "mydoc_icons.html",
"summary": "You can integrate font icons through the Font Awesome and Glyphical Halflings libraries. These libraries allow you to embed icons through their libraries delivered as a link reference. You don't need any image libraries downloaded in your project."
}
,



{
"title": "Images",
"tags": "formatting",
"keywords": "images, screenshots, vectors, svg, markdown syntax",
"url": "mydoc_images.html",
"summary": "Store images in the images folder and use the image.html include to insert images. This include has several options, including figcaptions, that extract the content from the formatting."
}
,



{
"title": "Install GeoPrism on Ubuntu Linux",
"tags": "",
"keywords": "geoprism on linux",
"url": "mydoc_install_geoprism_on_linux.html",
"summary": "GeoPrism is primarily used in production on Linux servers and so works well in a Linux development environment as well."
}
,



{
"title": "Install GeoPrism on Mac",
"tags": "getting_startedtroubleshooting",
"keywords": "",
"url": "mydoc_install_geoprism_on_mac.html",
"summary": "While GeoPrism is primarily used in production on Linux servers setup on a Mac for development purposes works well."
}
,



{
"title": "Introduction",
"tags": "",
"keywords": "",
"url": "mydoc_introduction.html",
"summary": ""
}
,



{
"title": "iTerm profiles",
"tags": "publishing",
"keywords": "iterm, terminal, build shortcuts, mac",
"url": "mydoc_iterm_profiles.html",
"summary": "You can set up profiles in iTerm to facilitate the build process with just a few clicks. This can make it a lot easier to quickly build multiple outputs."
}
,



{
"title": "Knowledge-base layout",
"tags": "special_layouts",
"keywords": "knowledge base, support portal, grid, doc portal",
"url": "mydoc_kb_layout.html",
"summary": "This shows a sample layout for a knowledge base. Each square could link to a tag archive page. In this example, font icons from Font Awesome are used for the graphics, and the layout is pulled from the Modern Business theme. ."
}
,



{
"title": "Labels",
"tags": "formatting",
"keywords": "labels, buttons, bootstrap, api methods",
"url": "mydoc_labels.html",
"summary": "Labels are just a simple Bootstrap component that you can include in your pages as needed. They represent one of many Bootstrap options you can include in your theme."
}
,



{
"title": "Lists",
"tags": "formatting",
"keywords": "bulleted lists, numbered lists",
"url": "mydoc_lists.html",
"summary": "This page shows how to create both bulleted and numbered lists"
}
,



{
"title": "Introduction to localization",
"tags": "metadata",
"keywords": "terraframe, runway, localization",
"url": "mydoc_localization_introduction.html",
"summary": "Covers the basics of using localization in Runway"
}
,



{
"title": "Our Software Engineering Manifesto",
"tags": "manifesto",
"keywords": "terraframe, gis, manifesto",
"url": "mydoc_manifesto.html",
"summary": "Our software engineering manifesto"
}
,



{
"title": "MdBusiness",
"tags": "mdbusiness",
"keywords": "terraframe, runway, mdbusiness",
"url": "mydoc_mdbusiness.html",
"summary": "MdBusiness, the primary building-block of your application"
}
,



{
"title": "MdBusiness",
"tags": "mdrelationship",
"keywords": "terraframe, runway, mdrelationship",
"url": "mydoc_mdrelationship.html",
"summary": "MdRelationship, defines a custom relationship type."
}
,



{
"title": "Manipulating Metadata in XML",
"tags": "metadata",
"keywords": "terraframe, runway, metadata",
"url": "mydoc_metadata_authoring.html",
"summary": "Covers the basics of manipulating metadata in Runway via XML"
}
,



{
"title": "Introduction to Runway metadata",
"tags": "mdbusiness",
"keywords": "terraframe, runway, mdbusiness",
"url": "mydoc_metadata_getting_started.html",
"summary": "Covers the basics of Runway metadata"
}
,



{
"title": "Manipulating Metadata in Java",
"tags": "metadata",
"keywords": "terraframe, runway, metadata",
"url": "mydoc_metadata_java_reading.html",
"summary": "Some examples of how to manipulate metadata using Java"
}
,



{
"title": "Introduction to Metadata Attributes",
"tags": "mdbusiness",
"keywords": "terraframe, runway, mdtype",
"url": "mydoc_metadata_mdattr_intro.html",
"summary": "Introduction to the metadata attribute hierarchy."
}
,



{
"title": "Introduction to Metadata Classes (MdClass)",
"tags": "mdbusiness",
"keywords": "terraframe, runway, mdtype",
"url": "mydoc_metadata_mdclass_intro.html",
"summary": "A class definition that transcends Java."
}
,



{
"title": "Patching",
"tags": "metadatapatching",
"keywords": "terraframe, runway, metadata",
"url": "mydoc_metadata_patching.html",
"summary": "Covers the basics of patching metadata in Runway"
}
,



{
"title": "Introduction to Runway permissions",
"tags": "aspects",
"keywords": "terraframe, runway, permissions",
"url": "mydoc_permissions_introduction.html",
"summary": "Covers the basics of using permissions within Runway"
}
,



{
"title": "Release notes",
"tags": "getting_started",
"keywords": "release notes, announcements, what's new, new features",
"url": "mydoc_release_notes.html",
"summary": "A high level overview of release notes for the GeoPrism project."
}
,



{
"title": "Scroll layout",
"tags": "special_layouts",
"keywords": "json, scrolling, scrollto, jquery plugin",
"url": "jsmydoc_scroll.html",
"summary": "This page demonstrates how you the integration of a script called ScrollTo, which is used here to link definitions of a JSON code sample to a list of definitions for that particular term. The scenario here is that the JSON blocks are really long, with extensive nesting and subnesting, which makes it difficult for tables below the JSON to adequately explain the term in a usable way."
}
,



{
"title": "News",
"tags": "",
"keywords": "news, blog, updates, release notes, announcements",
"url": "news.html",
"summary": ""
}
,



{
"title": "News",
"tags": "",
"keywords": "news, blog, updates, release notes, announcements",
"url": "news_archive.html",
"summary": ""
}
,



{
"title": "Product 1",
"tags": "",
"keywords": "mydoc",
"url": "p1_landing_page.html",
"summary": ""
}
,



{
"title": "Sample 1 Topic (Product 1)",
"tags": "",
"keywords": "sample",
"url": "p1_sample1.html",
"summary": "This is just a sample topic..."
}
,



{
"title": "Sample 2 Topic (Product 1)",
"tags": "",
"keywords": "sample",
"url": "p1_sample2.html",
"summary": "This is just a sample topic..."
}
,



{
"title": "Sample 3 Topic (Product 1)",
"tags": "",
"keywords": "sample",
"url": "p1_sample3.html",
"summary": "This is just a sample topic..."
}
,



{
"title": "Sample 4 Topic (Product 1)",
"tags": "",
"keywords": "sample",
"url": "p1_sample4.html",
"summary": "This is just a sample topic..."
}
,



{
"title": "Sample 5 Topic (Product 1)",
"tags": "",
"keywords": "sample",
"url": "p1_sample5.html",
"summary": "This is just a sample topic..."
}
,



{
"title": "Sample 6 Topic (Product 1)",
"tags": "",
"keywords": "sample",
"url": "p1_sample6.html",
"summary": "This is just a sample topic..."
}
,



{
"title": "Sample 7 Topic (Product 1)",
"tags": "",
"keywords": "sample",
"url": "p1_sample7.html",
"summary": "This is just a sample topic..."
}
,



{
"title": "Product 2",
"tags": "",
"keywords": "mydoc",
"url": "p2_landing_page.html",
"summary": ""
}
,



{
"title": "Sample 1 Topic",
"tags": "",
"keywords": "sample",
"url": "p2_sample1.html",
"summary": "This is just a sample topic..."
}
,



{
"title": "Sample 10 Topic",
"tags": "",
"keywords": "sample",
"url": "p2_sample10.html",
"summary": "This is just a sample topic..."
}
,



{
"title": "Sample 11 Topic",
"tags": "",
"keywords": "sample",
"url": "p2_sample11.html",
"summary": "This is just a sample topic..."
}
,



{
"title": "Sample 12 Topic",
"tags": "",
"keywords": "sample",
"url": "p2_sample12.html",
"summary": "This is just a sample topic..."
}
,



{
"title": "Sample 13 Topic",
"tags": "",
"keywords": "sample",
"url": "p2_sample13.html",
"summary": "This is just a sample topic..."
}
,



{
"title": "Sample 14 Topic",
"tags": "",
"keywords": "sample",
"url": "p2_sample14.html",
"summary": "This is just a sample topic..."
}
,



{
"title": "Sample 2 Topic",
"tags": "",
"keywords": "sample",
"url": "p2_sample2.html",
"summary": "This is just a sample topic..."
}
,



{
"title": "Sample 3 Topic",
"tags": "",
"keywords": "sample",
"url": "p2_sample3.html",
"summary": "This is just a sample topic..."
}
,



{
"title": "Sample 4 Topic",
"tags": "",
"keywords": "sample",
"url": "p2_sample4.html",
"summary": "This is just a sample topic..."
}
,



{
"title": "Sample 5 Topic",
"tags": "",
"keywords": "sample",
"url": "p2_sample5.html",
"summary": "This is just a sample topic..."
}
,



{
"title": "Sample 6 Topic",
"tags": "",
"keywords": "sample",
"url": "p2_sample6.html",
"summary": "This is just a sample topic..."
}
,



{
"title": "Sample 7 Topic",
"tags": "",
"keywords": "sample",
"url": "p2_sample7.html",
"summary": "This is just a sample topic..."
}
,



{
"title": "Sample 8 Topic",
"tags": "",
"keywords": "sample",
"url": "p2_sample8.html",
"summary": "This is just a sample topic..."
}
,



{
"title": "Sample 9 Topic",
"tags": "",
"keywords": "sample",
"url": "p2_sample9.html",
"summary": "This is just a sample topic..."
}
,









































{
"title": "Sample post",
"tags": "newsgetting_started",
"keywords": "",
"url": "samplepost.html",
"summary": "This is some summary frontmatter for my sample post."
}
,


{
"title": "Welcome to Jekyll!",
"tags": "news",
"keywords": "",
"url": "myupdate.html",
"summary": ""
}
,


{
"title": "Test post from last year",
"tags": "news",
"keywords": "",
"url": "test-post-from-last-year.html",
"summary": ""
}



]
