package com.runwaysdk.system.metadata;

@com.runwaysdk.business.ClassSignature(hash = -1672091595)
/**
 * This class is generated automatically.
 * DO NOT MAKE CHANGES TO IT - THEY WILL BE OVERWRITTEN
 * Custom business logic should be added to MdWebPrimitive.java
 *
 * @author Autogenerated by RunwaySDK
 */
public abstract class MdWebPrimitiveBase extends com.runwaysdk.system.metadata.MdWebAttribute
{
  public final static String CLASS = "com.runwaysdk.system.metadata.MdWebPrimitive";
  private static final long serialVersionUID = -1672091595;
  
  public MdWebPrimitiveBase()
  {
    super();
  }
  
  public Boolean getShowOnSearch()
  {
    return com.runwaysdk.constants.MdAttributeBooleanUtil.getTypeSafeValue(getValue(SHOWONSEARCH));
  }
  
  public void validateShowOnSearch()
  {
    this.validateAttribute(SHOWONSEARCH);
  }
  
  public static com.runwaysdk.dataaccess.MdAttributeDAOIF getShowOnSearchMd()
  {
    com.runwaysdk.dataaccess.MdClassDAOIF mdClassIF = com.runwaysdk.dataaccess.metadata.MdClassDAO.getMdClassDAO(com.runwaysdk.system.metadata.MdWebPrimitive.CLASS);
    return mdClassIF.definesAttribute(SHOWONSEARCH);
  }
  
  public void setShowOnSearch(Boolean value)
  {
    if(value == null)
    {
      setValue(SHOWONSEARCH, "");
    }
    else
    {
      setValue(SHOWONSEARCH, java.lang.Boolean.toString(value));
    }
  }
  
  protected String getDeclaredType()
  {
    return CLASS;
  }
  
  public com.runwaysdk.system.metadata.WebGridField addGrid(com.runwaysdk.system.metadata.MdWebSingleTermGrid mdWebSingleTermGrid)
  {
    return (com.runwaysdk.system.metadata.WebGridField) addParent(mdWebSingleTermGrid, com.runwaysdk.system.metadata.WebGridField.CLASS);
  }
  
  public void removeGrid(com.runwaysdk.system.metadata.MdWebSingleTermGrid mdWebSingleTermGrid)
  {
    removeAllParents(mdWebSingleTermGrid, com.runwaysdk.system.metadata.WebGridField.CLASS);
  }
  
  @SuppressWarnings("unchecked")
  public com.runwaysdk.query.OIterator<? extends com.runwaysdk.system.metadata.MdWebSingleTermGrid> getAllGrid()
  {
    return (com.runwaysdk.query.OIterator<? extends com.runwaysdk.system.metadata.MdWebSingleTermGrid>) getParents(com.runwaysdk.system.metadata.WebGridField.CLASS);
  }
  
  @SuppressWarnings("unchecked")
  public com.runwaysdk.query.OIterator<? extends com.runwaysdk.system.metadata.WebGridField> getAllGridRel()
  {
    return (com.runwaysdk.query.OIterator<? extends com.runwaysdk.system.metadata.WebGridField>) getParentRelationships(com.runwaysdk.system.metadata.WebGridField.CLASS);
  }
  
  @SuppressWarnings("unchecked")
  public com.runwaysdk.query.OIterator<? extends com.runwaysdk.system.metadata.WebGridField> getGridRel(com.runwaysdk.system.metadata.MdWebSingleTermGrid mdWebSingleTermGrid)
  {
    return (com.runwaysdk.query.OIterator<? extends com.runwaysdk.system.metadata.WebGridField>) getRelationshipsWithParent(mdWebSingleTermGrid, com.runwaysdk.system.metadata.WebGridField.CLASS);
  }
  
  public static MdWebPrimitive get(String id)
  {
    return (MdWebPrimitive) com.runwaysdk.business.Business.get(id);
  }
  
  public static MdWebPrimitive getByKey(String key)
  {
    return (MdWebPrimitive) com.runwaysdk.business.Business.get(CLASS, key);
  }
  
  public static MdWebPrimitive lock(java.lang.String id)
  {
    MdWebPrimitive _instance = MdWebPrimitive.get(id);
    _instance.lock();
    
    return _instance;
  }
  
  public static MdWebPrimitive unlock(java.lang.String id)
  {
    MdWebPrimitive _instance = MdWebPrimitive.get(id);
    _instance.unlock();
    
    return _instance;
  }
  
  public String toString()
  {
    if (this.isNew())
    {
      return "New: "+ this.getClassDisplayLabel();
    }
    else
    {
      return super.toString();
    }
  }
}
