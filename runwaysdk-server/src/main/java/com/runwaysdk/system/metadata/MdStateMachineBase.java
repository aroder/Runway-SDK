/**
 * Copyright (c) 2013 TerraFrame, Inc. All rights reserved.
 *
 * This file is part of Runway SDK(tm).
 *
 * Runway SDK(tm) is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License as
 * published by the Free Software Foundation, either version 3 of the
 * License, or (at your option) any later version.
 *
 * Runway SDK(tm) is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with Runway SDK(tm).  If not, see <http://www.gnu.org/licenses/>.
 */
package com.runwaysdk.system.metadata;

@com.runwaysdk.business.ClassSignature(hash = 1178192432)
/**
 * This class is generated automatically.
 * DO NOT MAKE CHANGES TO IT - THEY WILL BE OVERWRITTEN
 * Custom business logic should be added to MdStateMachine.java
 *
 * @author Autogenerated by RunwaySDK
 */
public abstract class MdStateMachineBase extends com.runwaysdk.system.metadata.MdBusiness
{
  public final static String CLASS = "com.runwaysdk.system.metadata.MdStateMachine";
  public static java.lang.String STATEMACHINEOWNER = "stateMachineOwner";
  private static final long serialVersionUID = 1178192432;
  
  public MdStateMachineBase()
  {
    super();
  }
  
  public com.runwaysdk.system.metadata.MdBusiness getStateMachineOwner()
  {
    if (getValue(STATEMACHINEOWNER).trim().equals(""))
    {
      return null;
    }
    else
    {
      return com.runwaysdk.system.metadata.MdBusiness.get(getValue(STATEMACHINEOWNER));
    }
  }
  
  public String getStateMachineOwnerId()
  {
    return getValue(STATEMACHINEOWNER);
  }
  
  public void validateStateMachineOwner()
  {
    this.validateAttribute(STATEMACHINEOWNER);
  }
  
  public static com.runwaysdk.dataaccess.MdAttributeDAOIF getStateMachineOwnerMd()
  {
    com.runwaysdk.dataaccess.MdClassDAOIF mdClassIF = com.runwaysdk.dataaccess.metadata.MdClassDAO.getMdClassDAO(com.runwaysdk.system.metadata.MdStateMachine.CLASS);
    return mdClassIF.definesAttribute(STATEMACHINEOWNER);
  }
  
  public void setStateMachineOwner(com.runwaysdk.system.metadata.MdBusiness value)
  {
    if(value == null)
    {
      setValue(STATEMACHINEOWNER, "");
    }
    else
    {
      setValue(STATEMACHINEOWNER, value.getId());
    }
  }
  
  protected String getDeclaredType()
  {
    return CLASS;
  }
  
  public com.runwaysdk.system.DefinesStateMachine addStateMachine(com.runwaysdk.system.metadata.MdBusiness mdBusiness)
  {
    return (com.runwaysdk.system.DefinesStateMachine) addParent(mdBusiness, com.runwaysdk.system.DefinesStateMachine.CLASS);
  }
  
  public void removeStateMachine(com.runwaysdk.system.metadata.MdBusiness mdBusiness)
  {
    removeAllParents(mdBusiness, com.runwaysdk.system.DefinesStateMachine.CLASS);
  }
  
  @SuppressWarnings("unchecked")
  public com.runwaysdk.query.OIterator<? extends com.runwaysdk.system.metadata.MdBusiness> getAllStateMachine()
  {
    return (com.runwaysdk.query.OIterator<? extends com.runwaysdk.system.metadata.MdBusiness>) getParents(com.runwaysdk.system.DefinesStateMachine.CLASS);
  }
  
  @SuppressWarnings("unchecked")
  public com.runwaysdk.query.OIterator<? extends com.runwaysdk.system.DefinesStateMachine> getAllStateMachineRel()
  {
    return (com.runwaysdk.query.OIterator<? extends com.runwaysdk.system.DefinesStateMachine>) getParentRelationships(com.runwaysdk.system.DefinesStateMachine.CLASS);
  }
  
  @SuppressWarnings("unchecked")
  public com.runwaysdk.system.DefinesStateMachine getStateMachineRel(com.runwaysdk.system.metadata.MdBusiness mdBusiness)
  {
    com.runwaysdk.query.OIterator<? extends com.runwaysdk.system.DefinesStateMachine> iterator = (com.runwaysdk.query.OIterator<? extends com.runwaysdk.system.DefinesStateMachine>) getRelationshipsWithParent(mdBusiness, com.runwaysdk.system.DefinesStateMachine.CLASS);
    try
    {
      if (iterator.hasNext())
      {
        return iterator.next();
      }
      else
      {
        return null;
      }
    }
    finally
    {
      iterator.close();
    }
  }
  
  public static MdStateMachine get(String id)
  {
    return (MdStateMachine) com.runwaysdk.business.Business.get(id);
  }
  
  public static MdStateMachine getByKey(String key)
  {
    return (MdStateMachine) com.runwaysdk.business.Business.get(CLASS, key);
  }
  
  public static MdStateMachine lock(java.lang.String id)
  {
    MdStateMachine _instance = MdStateMachine.get(id);
    _instance.lock();
    
    return _instance;
  }
  
  public static MdStateMachine unlock(java.lang.String id)
  {
    MdStateMachine _instance = MdStateMachine.get(id);
    _instance.unlock();
    
    return _instance;
  }
  
  public String toString()
  {
    if (this.isNew())
    {
      return "New: "+ this.getClassDisplayLabel();
    }
    else
    {
      return super.toString();
    }
  }
}
