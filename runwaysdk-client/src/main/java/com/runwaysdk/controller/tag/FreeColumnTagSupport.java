/**
 * Copyright (c) 2015 TerraFrame, Inc. All rights reserved.
 *
 * This file is part of Runway SDK(tm).
 *
 * Runway SDK(tm) is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License as
 * published by the Free Software Foundation, either version 3 of the
 * License, or (at your option) any later version.
 *
 * Runway SDK(tm) is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with Runway SDK(tm).  If not, see <http://www.gnu.org/licenses/>.
 */
package com.runwaysdk.controller.tag;

import java.io.IOException;

import javax.servlet.jsp.JspException;
import javax.servlet.jsp.tagext.JspTag;
import javax.servlet.jsp.tagext.SimpleTagSupport;

import com.runwaysdk.controller.table.Column;
import com.runwaysdk.controller.tag.develop.TagAnnotation;

@TagAnnotation(name = "freeColumn", bodyContent = "scriptless", description = "Defines a single free column of a table")
public class FreeColumnTagSupport extends SimpleTagSupport implements ConcreteColumnTagIF
{
  /**
   * Column data-structure generated by digesting this FreeColumnTag
   */
  private Column           column;
  
  public FreeColumnTagSupport()
  {
    this.column = new Column();
  }

  /** (non-Javadoc)
   * @see com.runwaysdk.controller.tag.ColumnTagIF#getColumn()
   */
  public Column getColumn()
  {
    return column;
  }

  /** (non-Javadoc)
   * @see com.runwaysdk.controller.tag.ColumnTagIF#getAttributeName()
   */
  public String getAttributeName()
  {
    // Free columns are not tied to attributes of the MutableDTO
    return null;
  }
  
  @Override
  public void doTag() throws JspException, IOException
  {
    JspTag parent = findAncestorWithClass(this, ColumnableTagIF.class);

    if (parent != null)
    {
      ColumnableTagIF table = ( (ColumnableTagIF) parent );
      
      if (this.getJspBody() != null)
      {
        this.getJspBody().invoke(column.getWriter());
      }

      table.getColumnar().addColumn(column);
    }
  }


}
