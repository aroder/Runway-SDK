package com.runwaysdk.system.metadata;

@com.runwaysdk.business.ClassSignature(hash = -1602917870)
/**
 * This class is generated automatically.
 * DO NOT MAKE CHANGES TO IT - THEY WILL BE OVERWRITTEN
 * Custom business logic should be added to AttributeIndicator.java
 *
 * @author Autogenerated by RunwaySDK
 */
public abstract class AttributeIndicatorBase extends com.runwaysdk.system.metadata.MetadataRelationship
{
  public final static String CLASS = "com.runwaysdk.system.metadata.AttributeIndicator";
  private static final long serialVersionUID = -1602917870;
  
  public AttributeIndicatorBase(String parentId, String childId)
  {
    super(parentId, childId);
  }
  
  protected String getDeclaredType()
  {
    return CLASS;
  }
  
  public com.runwaysdk.system.metadata.MdAttributeIndicator getParent()
  {
    return (com.runwaysdk.system.metadata.MdAttributeIndicator) super.getParent();
  }
  
  public com.runwaysdk.system.metadata.IndicatorComposite getChild()
  {
    return (com.runwaysdk.system.metadata.IndicatorComposite) super.getChild();
  }
  
  public static AttributeIndicator get(String id)
  {
    return (AttributeIndicator) com.runwaysdk.business.Relationship.get(id);
  }
  
  public static AttributeIndicator getByKey(String key)
  {
    return (AttributeIndicator) com.runwaysdk.business.Relationship.get(CLASS, key);
  }
  
  public static AttributeIndicator lock(java.lang.String id)
  {
    AttributeIndicator _instance = AttributeIndicator.get(id);
    _instance.lock();
    
    return _instance;
  }
  
  public static AttributeIndicator unlock(java.lang.String id)
  {
    AttributeIndicator _instance = AttributeIndicator.get(id);
    _instance.unlock();
    
    return _instance;
  }
  
  public String toString()
  {
    if (this.isNew())
    {
      return "New: "+ this.getClassDisplayLabel();
    }
    else
    {
      return super.toString();
    }
  }
}
