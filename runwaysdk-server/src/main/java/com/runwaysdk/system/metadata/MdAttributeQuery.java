package com.runwaysdk.system.metadata;

@com.runwaysdk.business.ClassSignature(hash = -1754222810)
/**
 * This class is generated automatically.
 * DO NOT MAKE CHANGES TO IT - THEY WILL BE OVERWRITTEN
 * Custom business logic should be added to MdAttribute.java
 *
 * @author Autogenerated by RunwaySDK
 */
public  class MdAttributeQuery extends com.runwaysdk.system.metadata.MetadataQuery

{

  public MdAttributeQuery(com.runwaysdk.query.QueryFactory componentQueryFactory)
  {
    super(componentQueryFactory);
    if (this.getComponentQuery() == null)
    {
      com.runwaysdk.business.BusinessQuery businessQuery = componentQueryFactory.businessQuery(this.getClassType());

       this.setBusinessQuery(businessQuery);
    }
  }

  public MdAttributeQuery(com.runwaysdk.query.ValueQuery valueQuery)
  {
    super(valueQuery);
    if (this.getComponentQuery() == null)
    {
      com.runwaysdk.business.BusinessQuery businessQuery = new com.runwaysdk.business.BusinessQuery(valueQuery, this.getClassType());

       this.setBusinessQuery(businessQuery);
    }
  }

  public String getClassType()
  {
    return com.runwaysdk.system.metadata.MdAttribute.CLASS;
  }
  /**  
   * Returns an iterator of Business objects that match the query criteria specified
   * on this query object. 
   * @return iterator of Business objects that match the query criteria specified
   * on this query object.
   */
  public com.runwaysdk.query.OIterator<? extends MdAttribute> getIterator()
  {
    this.checkNotUsedInValueQuery();
    String sqlStmt;
    if (_limit != null && _skip != null)
    {
      sqlStmt = this.getComponentQuery().getSQL(_limit, _skip);
    }
    else
    {
      sqlStmt = this.getComponentQuery().getSQL();
    }
    java.util.Map<String, com.runwaysdk.query.ColumnInfo> columnInfoMap = this.getComponentQuery().getColumnInfoMap();

    java.sql.ResultSet results = com.runwaysdk.dataaccess.database.Database.query(sqlStmt);
    return new com.runwaysdk.business.BusinessIterator<MdAttribute>(this.getComponentQuery().getMdEntityIF(), columnInfoMap, results);
  }


  public com.runwaysdk.query.Condition definingClass()
  {
    com.runwaysdk.query.QueryFactory queryFactory = this.getQueryFactory();
    com.runwaysdk.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(com.runwaysdk.system.metadata.ClassAttribute.CLASS);

    return this.getBusinessQuery().isChildIn(relationshipQuery);
  }


  public com.runwaysdk.query.Condition SUBSELECT_definingClass()
  {
    com.runwaysdk.query.QueryFactory queryFactory = this.getQueryFactory();
    com.runwaysdk.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(com.runwaysdk.system.metadata.ClassAttribute.CLASS);

    return this.getBusinessQuery().isChildIn_SUBSELECT(relationshipQuery);
  }

  public com.runwaysdk.query.Condition definingClass(com.runwaysdk.system.metadata.ClassAttributeQuery classAttributeQuery)
  {
    return this.getBusinessQuery().isChildIn(classAttributeQuery);
  }

  public com.runwaysdk.query.Condition SUBSELECT_definingClass(com.runwaysdk.system.metadata.ClassAttributeQuery classAttributeQuery)
  {
    return this.getBusinessQuery().isChildIn_SUBSELECT(classAttributeQuery);
  }

  public com.runwaysdk.query.Condition definingClass(com.runwaysdk.system.metadata.MdClassQuery mdClassQuery)
  {
    com.runwaysdk.query.QueryFactory queryFactory = this.getQueryFactory();
    com.runwaysdk.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(com.runwaysdk.system.metadata.ClassAttribute.CLASS);
    relationshipQuery.AND(relationshipQuery.hasParent(mdClassQuery));

    return this.getBusinessQuery().isChildIn(relationshipQuery);
  }

  public com.runwaysdk.query.Condition SUBSELECT_definingClass(com.runwaysdk.system.metadata.MdClassQuery mdClassQuery)
  {
    com.runwaysdk.query.QueryFactory queryFactory = this.getQueryFactory();
    com.runwaysdk.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(com.runwaysdk.system.metadata.ClassAttribute.CLASS);
    relationshipQuery.AND(relationshipQuery.hasParent(mdClassQuery));

    return this.getBusinessQuery().isChildIn_SUBSELECT(relationshipQuery);
  }

  public com.runwaysdk.query.Condition definingClass(com.runwaysdk.system.metadata.MdClassQuery mdClassQuery, com.runwaysdk.system.metadata.ClassAttributeQuery classAttributeQuery)
  {
    classAttributeQuery.AND(classAttributeQuery.hasParent(mdClassQuery));
    return this.getBusinessQuery().isChildIn(classAttributeQuery);
  }

  public com.runwaysdk.query.Condition SUBSELECT_definingClass(com.runwaysdk.system.metadata.MdClassQuery mdClassQuery, com.runwaysdk.system.metadata.ClassAttributeQuery classAttributeQuery)
  {
    classAttributeQuery.AND(classAttributeQuery.hasParent(mdClassQuery));
    return this.getBusinessQuery().isChildIn_SUBSELECT(classAttributeQuery);
  }


  public com.runwaysdk.query.Condition NOT_IN_definingClass()
  {
    com.runwaysdk.query.QueryFactory queryFactory = this.getQueryFactory();
    com.runwaysdk.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(com.runwaysdk.system.metadata.ClassAttribute.CLASS);

    return this.getBusinessQuery().isNotChildIn(relationshipQuery);
  }


  public com.runwaysdk.query.Condition SUBSELECT_NOT_IN_definingClass()
  {
    com.runwaysdk.query.QueryFactory queryFactory = this.getQueryFactory();
    com.runwaysdk.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(com.runwaysdk.system.metadata.ClassAttribute.CLASS);

    return this.getBusinessQuery().isNotChildIn_SUBSELECT(relationshipQuery);
  }

  public com.runwaysdk.query.Condition NOT_IN_definingClass(com.runwaysdk.system.metadata.ClassAttributeQuery classAttributeQuery)
  {
    return this.getBusinessQuery().isNotChildIn(classAttributeQuery);
  }

  public com.runwaysdk.query.Condition SUBSELECT_NOT_IN_definingClass(com.runwaysdk.system.metadata.ClassAttributeQuery classAttributeQuery)
  {
    return this.getBusinessQuery().isNotChildIn_SUBSELECT(classAttributeQuery);
  }

  public com.runwaysdk.query.Condition NOT_IN_definingClass(com.runwaysdk.system.metadata.MdClassQuery mdClassQuery)
  {
    com.runwaysdk.query.QueryFactory queryFactory = this.getQueryFactory();
    com.runwaysdk.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(com.runwaysdk.system.metadata.ClassAttribute.CLASS);
    relationshipQuery.AND(relationshipQuery.hasParent(mdClassQuery));

    return this.getBusinessQuery().isNotChildIn(relationshipQuery);
  }

  public com.runwaysdk.query.Condition SUBSELECT_NOT_IN_definingClass(com.runwaysdk.system.metadata.MdClassQuery mdClassQuery)
  {
    com.runwaysdk.query.QueryFactory queryFactory = this.getQueryFactory();
    com.runwaysdk.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(com.runwaysdk.system.metadata.ClassAttribute.CLASS);
    relationshipQuery.AND(relationshipQuery.hasParent(mdClassQuery));

    return this.getBusinessQuery().isNotChildIn_SUBSELECT(relationshipQuery);
  }

  public com.runwaysdk.query.Condition NOT_IN_definingClass(com.runwaysdk.system.metadata.MdClassQuery mdClassQuery, com.runwaysdk.system.metadata.ClassAttributeQuery classAttributeQuery)
  {
    classAttributeQuery.AND(classAttributeQuery.hasParent(mdClassQuery));
    return this.getBusinessQuery().isNotChildIn(classAttributeQuery);
  }

  public com.runwaysdk.query.Condition SUBSELECT_NOT_IN_definingClass(com.runwaysdk.system.metadata.MdClassQuery mdClassQuery, com.runwaysdk.system.metadata.ClassAttributeQuery classAttributeQuery)
  {
    classAttributeQuery.AND(classAttributeQuery.hasParent(mdClassQuery));
    return this.getBusinessQuery().isNotChildIn_SUBSELECT(classAttributeQuery);
  }


  public com.runwaysdk.query.Condition mdAttributeDimension()
  {
    com.runwaysdk.query.QueryFactory queryFactory = this.getQueryFactory();
    com.runwaysdk.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(com.runwaysdk.system.metadata.AttributeHasDimension.CLASS);

    return this.getBusinessQuery().isParentIn(relationshipQuery);
  }


  public com.runwaysdk.query.Condition SUBSELECT_mdAttributeDimension()
  {
    com.runwaysdk.query.QueryFactory queryFactory = this.getQueryFactory();
    com.runwaysdk.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(com.runwaysdk.system.metadata.AttributeHasDimension.CLASS);

    return this.getBusinessQuery().isParentIn_SUBSELECT(relationshipQuery);
  }

  public com.runwaysdk.query.Condition mdAttributeDimension(com.runwaysdk.system.metadata.AttributeHasDimensionQuery attributeHasDimensionQuery)
  {
    return this.getBusinessQuery().isParentIn(attributeHasDimensionQuery);
  }

  public com.runwaysdk.query.Condition SUBSELECT_mdAttributeDimension(com.runwaysdk.system.metadata.AttributeHasDimensionQuery attributeHasDimensionQuery)
  {
    return this.getBusinessQuery().isParentIn_SUBSELECT(attributeHasDimensionQuery);
  }

  public com.runwaysdk.query.Condition mdAttributeDimension(com.runwaysdk.system.metadata.MdAttributeDimensionQuery mdAttributeDimensionQuery)
  {
    com.runwaysdk.query.QueryFactory queryFactory = this.getQueryFactory();
    com.runwaysdk.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(com.runwaysdk.system.metadata.AttributeHasDimension.CLASS);
    relationshipQuery.AND(relationshipQuery.hasChild(mdAttributeDimensionQuery));

    return this.getBusinessQuery().isParentIn(relationshipQuery);
  }

  public com.runwaysdk.query.Condition SUBSELECT_mdAttributeDimension(com.runwaysdk.system.metadata.MdAttributeDimensionQuery mdAttributeDimensionQuery)
  {
    com.runwaysdk.query.QueryFactory queryFactory = this.getQueryFactory();
    com.runwaysdk.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(com.runwaysdk.system.metadata.AttributeHasDimension.CLASS);
    relationshipQuery.AND(relationshipQuery.hasChild(mdAttributeDimensionQuery));

    return this.getBusinessQuery().isParentIn_SUBSELECT(relationshipQuery);
  }

  public com.runwaysdk.query.Condition mdAttributeDimension(com.runwaysdk.system.metadata.MdAttributeDimensionQuery mdAttributeDimensionQuery, com.runwaysdk.system.metadata.AttributeHasDimensionQuery attributeHasDimensionQuery)
  {
    attributeHasDimensionQuery.AND(attributeHasDimensionQuery.hasChild(mdAttributeDimensionQuery));
    return this.getBusinessQuery().isParentIn(attributeHasDimensionQuery);
  }

  public com.runwaysdk.query.Condition SUBSELECT_mdAttributeDimension(com.runwaysdk.system.metadata.MdAttributeDimensionQuery mdAttributeDimensionQuery, com.runwaysdk.system.metadata.AttributeHasDimensionQuery attributeHasDimensionQuery)
  {
    attributeHasDimensionQuery.AND(attributeHasDimensionQuery.hasChild(mdAttributeDimensionQuery));
    return this.getBusinessQuery().isParentIn_SUBSELECT(attributeHasDimensionQuery);
  }


  public com.runwaysdk.query.Condition NOT_IN_mdAttributeDimension()
  {
    com.runwaysdk.query.QueryFactory queryFactory = this.getQueryFactory();
    com.runwaysdk.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(com.runwaysdk.system.metadata.AttributeHasDimension.CLASS);

    return this.getBusinessQuery().isNotParentIn(relationshipQuery);
  }


  public com.runwaysdk.query.Condition SUBSELECT_NOT_IN_mdAttributeDimension()
  {
    com.runwaysdk.query.QueryFactory queryFactory = this.getQueryFactory();
    com.runwaysdk.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(com.runwaysdk.system.metadata.AttributeHasDimension.CLASS);

    return this.getBusinessQuery().isNotParentIn_SUBSELECT(relationshipQuery);
  }

  public com.runwaysdk.query.Condition NOT_IN_mdAttributeDimension(com.runwaysdk.system.metadata.AttributeHasDimensionQuery attributeHasDimensionQuery)
  {
    return this.getBusinessQuery().isNotParentIn(attributeHasDimensionQuery);
  }

  public com.runwaysdk.query.Condition SUBSELECT_NOT_IN_mdAttributeDimension(com.runwaysdk.system.metadata.AttributeHasDimensionQuery attributeHasDimensionQuery)
  {
    return this.getBusinessQuery().isNotParentIn_SUBSELECT(attributeHasDimensionQuery);
  }

  public com.runwaysdk.query.Condition NOT_IN_mdAttributeDimension(com.runwaysdk.system.metadata.MdAttributeDimensionQuery mdAttributeDimensionQuery)
  {
    com.runwaysdk.query.QueryFactory queryFactory = this.getQueryFactory();
    com.runwaysdk.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(com.runwaysdk.system.metadata.AttributeHasDimension.CLASS);
    relationshipQuery.AND(relationshipQuery.hasChild(mdAttributeDimensionQuery));

    return this.getBusinessQuery().isNotParentIn(relationshipQuery);
  }

  public com.runwaysdk.query.Condition SUBSELECT_NOT_IN_mdAttributeDimension(com.runwaysdk.system.metadata.MdAttributeDimensionQuery mdAttributeDimensionQuery)
  {
    com.runwaysdk.query.QueryFactory queryFactory = this.getQueryFactory();
    com.runwaysdk.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(com.runwaysdk.system.metadata.AttributeHasDimension.CLASS);
    relationshipQuery.AND(relationshipQuery.hasChild(mdAttributeDimensionQuery));

    return this.getBusinessQuery().isNotParentIn_SUBSELECT(relationshipQuery);
  }

  public com.runwaysdk.query.Condition NOT_IN_mdAttributeDimension(com.runwaysdk.system.metadata.MdAttributeDimensionQuery mdAttributeDimensionQuery, com.runwaysdk.system.metadata.AttributeHasDimensionQuery attributeHasDimensionQuery)
  {
    attributeHasDimensionQuery.AND(attributeHasDimensionQuery.hasChild(mdAttributeDimensionQuery));
    return this.getBusinessQuery().isNotParentIn(attributeHasDimensionQuery);
  }

  public com.runwaysdk.query.Condition SUBSELECT_NOT_IN_mdAttributeDimension(com.runwaysdk.system.metadata.MdAttributeDimensionQuery mdAttributeDimensionQuery, com.runwaysdk.system.metadata.AttributeHasDimensionQuery attributeHasDimensionQuery)
  {
    attributeHasDimensionQuery.AND(attributeHasDimensionQuery.hasChild(mdAttributeDimensionQuery));
    return this.getBusinessQuery().isNotParentIn_SUBSELECT(attributeHasDimensionQuery);
  }


/**
 * Interface that masks all type unsafe query methods and defines all type safe methods.
 * This type is used when a join is performed on this class as a reference.
 **/
  public interface MdAttributeQueryReferenceIF extends com.runwaysdk.system.metadata.MetadataQuery.MetadataQueryReferenceIF
  {


    public com.runwaysdk.query.BasicCondition EQ(com.runwaysdk.system.metadata.MdAttribute mdAttribute);

    public com.runwaysdk.query.BasicCondition NE(com.runwaysdk.system.metadata.MdAttribute mdAttribute);


  public com.runwaysdk.query.Condition mdAttributeDimension();

  public com.runwaysdk.query.Condition mdAttributeDimension(com.runwaysdk.system.metadata.MdAttributeDimensionQuery mdAttributeDimensionQuery);

  public com.runwaysdk.query.Condition mdAttributeDimension(com.runwaysdk.system.metadata.MdAttributeDimensionQuery mdAttributeDimensionQuery, com.runwaysdk.system.metadata.AttributeHasDimensionQuery attributeHasDimensionQuery);


  public com.runwaysdk.query.Condition SUBSELECT_mdAttributeDimension();

  public com.runwaysdk.query.Condition SUBSELECT_mdAttributeDimension(com.runwaysdk.system.metadata.MdAttributeDimensionQuery mdAttributeDimensionQuery);

  public com.runwaysdk.query.Condition SUBSELECT_mdAttributeDimension(com.runwaysdk.system.metadata.MdAttributeDimensionQuery mdAttributeDimensionQuery, com.runwaysdk.system.metadata.AttributeHasDimensionQuery attributeHasDimensionQuery);


  public com.runwaysdk.query.Condition NOT_IN_mdAttributeDimension();

  public com.runwaysdk.query.Condition NOT_IN_mdAttributeDimension(com.runwaysdk.system.metadata.MdAttributeDimensionQuery mdAttributeDimensionQuery);

  public com.runwaysdk.query.Condition NOT_IN_mdAttributeDimension(com.runwaysdk.system.metadata.MdAttributeDimensionQuery mdAttributeDimensionQuery, com.runwaysdk.system.metadata.AttributeHasDimensionQuery attributeHasDimensionQuery);


  public com.runwaysdk.query.Condition SUBSELECT_NOT_IN_mdAttributeDimension();

  public com.runwaysdk.query.Condition SUBSELECT_NOT_IN_mdAttributeDimension(com.runwaysdk.system.metadata.MdAttributeDimensionQuery mdAttributeDimensionQuery);

  public com.runwaysdk.query.Condition SUBSELECT_NOT_IN_mdAttributeDimension(com.runwaysdk.system.metadata.MdAttributeDimensionQuery mdAttributeDimensionQuery, com.runwaysdk.system.metadata.AttributeHasDimensionQuery attributeHasDimensionQuery);


  public com.runwaysdk.query.Condition definingClass();
  public com.runwaysdk.query.Condition definingClass(com.runwaysdk.system.metadata.MdClassQuery mdClassQuery);

  public com.runwaysdk.query.Condition definingClass(com.runwaysdk.system.metadata.MdClassQuery mdClassQuery, com.runwaysdk.system.metadata.ClassAttributeQuery classAttributeQuery);


  public com.runwaysdk.query.Condition SUBSELECT_definingClass();
  public com.runwaysdk.query.Condition SUBSELECT_definingClass(com.runwaysdk.system.metadata.MdClassQuery mdClassQuery);

  public com.runwaysdk.query.Condition SUBSELECT_definingClass(com.runwaysdk.system.metadata.MdClassQuery mdClassQuery, com.runwaysdk.system.metadata.ClassAttributeQuery classAttributeQuery);


  public com.runwaysdk.query.Condition NOT_IN_definingClass();
  public com.runwaysdk.query.Condition NOT_IN_definingClass(com.runwaysdk.system.metadata.MdClassQuery mdClassQuery);

  public com.runwaysdk.query.Condition NOT_IN_definingClass(com.runwaysdk.system.metadata.MdClassQuery mdClassQuery, com.runwaysdk.system.metadata.ClassAttributeQuery classAttributeQuery);


  public com.runwaysdk.query.Condition SUBSELECT_NOT_IN_definingClass();
  public com.runwaysdk.query.Condition SUBSELECT_NOT_IN_definingClass(com.runwaysdk.system.metadata.MdClassQuery mdClassQuery);

  public com.runwaysdk.query.Condition SUBSELECT_NOT_IN_definingClass(com.runwaysdk.system.metadata.MdClassQuery mdClassQuery, com.runwaysdk.system.metadata.ClassAttributeQuery classAttributeQuery);

  }

/**
 * Implements type safe query methods.
 * This type is used when a join is performed on this class as a reference.
 **/
  public static class MdAttributeQueryReference extends com.runwaysdk.system.metadata.MetadataQuery.MetadataQueryReference
 implements MdAttributeQueryReferenceIF

  {

  public MdAttributeQueryReference(com.runwaysdk.dataaccess.MdAttributeRefDAOIF mdAttributeIF, String attributeNamespace, String definingTableName, String definingTableAlias, com.runwaysdk.dataaccess.MdBusinessDAOIF referenceMdBusinessIF, String referenceTableAlias, com.runwaysdk.query.ComponentQuery rootQuery, java.util.Set<com.runwaysdk.query.Join> tableJoinSet, String alias, String displayLabel)
  {
    super(mdAttributeIF, attributeNamespace, definingTableName, definingTableAlias, referenceMdBusinessIF, referenceTableAlias, rootQuery, tableJoinSet, alias, displayLabel);

  }


    public com.runwaysdk.query.BasicCondition EQ(com.runwaysdk.system.metadata.MdAttribute mdAttribute)
    {
      if(mdAttribute == null) return this.EQ((java.lang.String)null);
      return this.EQ(mdAttribute.getId());
    }

    public com.runwaysdk.query.BasicCondition NE(com.runwaysdk.system.metadata.MdAttribute mdAttribute)
    {
      if(mdAttribute == null) return this.NE((java.lang.String)null);
      return this.NE(mdAttribute.getId());
    }


  public com.runwaysdk.query.Condition mdAttributeDimension()
  {
    com.runwaysdk.query.QueryFactory queryFactory = this.getQueryFactory();
    com.runwaysdk.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(com.runwaysdk.system.metadata.AttributeHasDimension.CLASS);

    return this.isParentIn(relationshipQuery);
  }


  public com.runwaysdk.query.Condition SUBSELECT_mdAttributeDimension()
  {
    com.runwaysdk.query.QueryFactory queryFactory = this.getQueryFactory();
    com.runwaysdk.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(com.runwaysdk.system.metadata.AttributeHasDimension.CLASS);

    return this.isParentIn_SUBSELECT(relationshipQuery);
  }

  public com.runwaysdk.query.Condition mdAttributeDimension(com.runwaysdk.system.metadata.AttributeHasDimensionQuery attributeHasDimensionQuery)
  {
    return this.isParentIn(attributeHasDimensionQuery);
  }

  public com.runwaysdk.query.Condition SUBSELECT_mdAttributeDimension(com.runwaysdk.system.metadata.AttributeHasDimensionQuery attributeHasDimensionQuery)
  {
    return this.isParentIn_SUBSELECT(attributeHasDimensionQuery);
  }

  public com.runwaysdk.query.Condition mdAttributeDimension(com.runwaysdk.system.metadata.MdAttributeDimensionQuery mdAttributeDimensionQuery)
  {
    com.runwaysdk.query.QueryFactory queryFactory = this.getQueryFactory();
    com.runwaysdk.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(com.runwaysdk.system.metadata.AttributeHasDimension.CLASS);
    relationshipQuery.AND(relationshipQuery.hasChild(mdAttributeDimensionQuery));

    return this.isParentIn(relationshipQuery);
  }

  public com.runwaysdk.query.Condition SUBSELECT_mdAttributeDimension(com.runwaysdk.system.metadata.MdAttributeDimensionQuery mdAttributeDimensionQuery)
  {
    com.runwaysdk.query.QueryFactory queryFactory = this.getQueryFactory();
    com.runwaysdk.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(com.runwaysdk.system.metadata.AttributeHasDimension.CLASS);
    relationshipQuery.AND(relationshipQuery.hasChild(mdAttributeDimensionQuery));

    return this.isParentIn_SUBSELECT(relationshipQuery);
  }

  public com.runwaysdk.query.Condition mdAttributeDimension(com.runwaysdk.system.metadata.MdAttributeDimensionQuery mdAttributeDimensionQuery, com.runwaysdk.system.metadata.AttributeHasDimensionQuery attributeHasDimensionQuery)
  {
    attributeHasDimensionQuery.AND(attributeHasDimensionQuery.hasChild(mdAttributeDimensionQuery));
    return this.isParentIn(attributeHasDimensionQuery);
  }

  public com.runwaysdk.query.Condition SUBSELECT_mdAttributeDimension(com.runwaysdk.system.metadata.MdAttributeDimensionQuery mdAttributeDimensionQuery, com.runwaysdk.system.metadata.AttributeHasDimensionQuery attributeHasDimensionQuery)
  {
    attributeHasDimensionQuery.AND(attributeHasDimensionQuery.hasChild(mdAttributeDimensionQuery));
    return this.isParentIn_SUBSELECT(attributeHasDimensionQuery);
  }


  public com.runwaysdk.query.Condition NOT_IN_mdAttributeDimension()
  {
    com.runwaysdk.query.QueryFactory queryFactory = this.getQueryFactory();
    com.runwaysdk.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(com.runwaysdk.system.metadata.AttributeHasDimension.CLASS);

    return this.isNotParentIn(relationshipQuery);
  }


  public com.runwaysdk.query.Condition SUBSELECT_NOT_IN_mdAttributeDimension()
  {
    com.runwaysdk.query.QueryFactory queryFactory = this.getQueryFactory();
    com.runwaysdk.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(com.runwaysdk.system.metadata.AttributeHasDimension.CLASS);

    return this.isNotParentIn_SUBSELECT(relationshipQuery);
  }

  public com.runwaysdk.query.Condition NOT_IN_mdAttributeDimension(com.runwaysdk.system.metadata.AttributeHasDimensionQuery attributeHasDimensionQuery)
  {
    return this.isNotParentIn(attributeHasDimensionQuery);
  }

  public com.runwaysdk.query.Condition SUBSELECT_NOT_IN_mdAttributeDimension(com.runwaysdk.system.metadata.AttributeHasDimensionQuery attributeHasDimensionQuery)
  {
    return this.isNotParentIn_SUBSELECT(attributeHasDimensionQuery);
  }

  public com.runwaysdk.query.Condition NOT_IN_mdAttributeDimension(com.runwaysdk.system.metadata.MdAttributeDimensionQuery mdAttributeDimensionQuery)
  {
    com.runwaysdk.query.QueryFactory queryFactory = this.getQueryFactory();
    com.runwaysdk.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(com.runwaysdk.system.metadata.AttributeHasDimension.CLASS);
    relationshipQuery.AND(relationshipQuery.hasChild(mdAttributeDimensionQuery));

    return this.isNotParentIn(relationshipQuery);
  }

  public com.runwaysdk.query.Condition SUBSELECT_NOT_IN_mdAttributeDimension(com.runwaysdk.system.metadata.MdAttributeDimensionQuery mdAttributeDimensionQuery)
  {
    com.runwaysdk.query.QueryFactory queryFactory = this.getQueryFactory();
    com.runwaysdk.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(com.runwaysdk.system.metadata.AttributeHasDimension.CLASS);
    relationshipQuery.AND(relationshipQuery.hasChild(mdAttributeDimensionQuery));

    return this.isNotParentIn_SUBSELECT(relationshipQuery);
  }

  public com.runwaysdk.query.Condition NOT_IN_mdAttributeDimension(com.runwaysdk.system.metadata.MdAttributeDimensionQuery mdAttributeDimensionQuery, com.runwaysdk.system.metadata.AttributeHasDimensionQuery attributeHasDimensionQuery)
  {
    attributeHasDimensionQuery.AND(attributeHasDimensionQuery.hasChild(mdAttributeDimensionQuery));
    return this.isNotParentIn(attributeHasDimensionQuery);
  }

  public com.runwaysdk.query.Condition SUBSELECT_NOT_IN_mdAttributeDimension(com.runwaysdk.system.metadata.MdAttributeDimensionQuery mdAttributeDimensionQuery, com.runwaysdk.system.metadata.AttributeHasDimensionQuery attributeHasDimensionQuery)
  {
    attributeHasDimensionQuery.AND(attributeHasDimensionQuery.hasChild(mdAttributeDimensionQuery));
    return this.isNotParentIn_SUBSELECT(attributeHasDimensionQuery);
  }


  public com.runwaysdk.query.Condition definingClass()
  {
    com.runwaysdk.query.QueryFactory queryFactory = this.getQueryFactory();
    com.runwaysdk.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(com.runwaysdk.system.metadata.ClassAttribute.CLASS);

    return this.isChildIn(relationshipQuery);
  }


  public com.runwaysdk.query.Condition SUBSELECT_definingClass()
  {
    com.runwaysdk.query.QueryFactory queryFactory = this.getQueryFactory();
    com.runwaysdk.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(com.runwaysdk.system.metadata.ClassAttribute.CLASS);

    return this.isChildIn_SUBSELECT(relationshipQuery);
  }

  public com.runwaysdk.query.Condition definingClass(com.runwaysdk.system.metadata.ClassAttributeQuery classAttributeQuery)
  {
    return this.isChildIn(classAttributeQuery);
  }

  public com.runwaysdk.query.Condition SUBSELECT_definingClass(com.runwaysdk.system.metadata.ClassAttributeQuery classAttributeQuery)
  {
    return this.isChildIn_SUBSELECT(classAttributeQuery);
  }

  public com.runwaysdk.query.Condition definingClass(com.runwaysdk.system.metadata.MdClassQuery mdClassQuery)
  {
    com.runwaysdk.query.QueryFactory queryFactory = this.getQueryFactory();
    com.runwaysdk.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(com.runwaysdk.system.metadata.ClassAttribute.CLASS);
    relationshipQuery.AND(relationshipQuery.hasParent(mdClassQuery));

    return this.isChildIn(relationshipQuery);
  }

  public com.runwaysdk.query.Condition SUBSELECT_definingClass(com.runwaysdk.system.metadata.MdClassQuery mdClassQuery)
  {
    com.runwaysdk.query.QueryFactory queryFactory = this.getQueryFactory();
    com.runwaysdk.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(com.runwaysdk.system.metadata.ClassAttribute.CLASS);
    relationshipQuery.AND(relationshipQuery.hasParent(mdClassQuery));

    return this.isChildIn_SUBSELECT(relationshipQuery);
  }

  public com.runwaysdk.query.Condition definingClass(com.runwaysdk.system.metadata.MdClassQuery mdClassQuery, com.runwaysdk.system.metadata.ClassAttributeQuery classAttributeQuery)
  {
    classAttributeQuery.AND(classAttributeQuery.hasParent(mdClassQuery));
    return this.isChildIn(classAttributeQuery);
  }

  public com.runwaysdk.query.Condition SUBSELECT_definingClass(com.runwaysdk.system.metadata.MdClassQuery mdClassQuery, com.runwaysdk.system.metadata.ClassAttributeQuery classAttributeQuery)
  {
    classAttributeQuery.AND(classAttributeQuery.hasParent(mdClassQuery));
    return this.isChildIn_SUBSELECT(classAttributeQuery);
  }


  public com.runwaysdk.query.Condition NOT_IN_definingClass()
  {
    com.runwaysdk.query.QueryFactory queryFactory = this.getQueryFactory();
    com.runwaysdk.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(com.runwaysdk.system.metadata.ClassAttribute.CLASS);

    return this.isNotChildIn(relationshipQuery);
  }


  public com.runwaysdk.query.Condition SUBSELECT_NOT_IN_definingClass()
  {
    com.runwaysdk.query.QueryFactory queryFactory = this.getQueryFactory();
    com.runwaysdk.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(com.runwaysdk.system.metadata.ClassAttribute.CLASS);

    return this.isNotChildIn_SUBSELECT(relationshipQuery);
  }

  public com.runwaysdk.query.Condition NOT_IN_definingClass(com.runwaysdk.system.metadata.ClassAttributeQuery classAttributeQuery)
  {
    return this.isNotChildIn(classAttributeQuery);
  }

  public com.runwaysdk.query.Condition SUBSELECT_NOT_IN_definingClass(com.runwaysdk.system.metadata.ClassAttributeQuery classAttributeQuery)
  {
    return this.isNotChildIn_SUBSELECT(classAttributeQuery);
  }

  public com.runwaysdk.query.Condition NOT_IN_definingClass(com.runwaysdk.system.metadata.MdClassQuery mdClassQuery)
  {
    com.runwaysdk.query.QueryFactory queryFactory = this.getQueryFactory();
    com.runwaysdk.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(com.runwaysdk.system.metadata.ClassAttribute.CLASS);
    relationshipQuery.AND(relationshipQuery.hasParent(mdClassQuery));

    return this.isNotChildIn(relationshipQuery);
  }

  public com.runwaysdk.query.Condition SUBSELECT_NOT_IN_definingClass(com.runwaysdk.system.metadata.MdClassQuery mdClassQuery)
  {
    com.runwaysdk.query.QueryFactory queryFactory = this.getQueryFactory();
    com.runwaysdk.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(com.runwaysdk.system.metadata.ClassAttribute.CLASS);
    relationshipQuery.AND(relationshipQuery.hasParent(mdClassQuery));

    return this.isNotChildIn_SUBSELECT(relationshipQuery);
  }

  public com.runwaysdk.query.Condition NOT_IN_definingClass(com.runwaysdk.system.metadata.MdClassQuery mdClassQuery, com.runwaysdk.system.metadata.ClassAttributeQuery classAttributeQuery)
  {
    classAttributeQuery.AND(classAttributeQuery.hasParent(mdClassQuery));
    return this.isNotChildIn(classAttributeQuery);
  }

  public com.runwaysdk.query.Condition SUBSELECT_NOT_IN_definingClass(com.runwaysdk.system.metadata.MdClassQuery mdClassQuery, com.runwaysdk.system.metadata.ClassAttributeQuery classAttributeQuery)
  {
    classAttributeQuery.AND(classAttributeQuery.hasParent(mdClassQuery));
    return this.isNotChildIn_SUBSELECT(classAttributeQuery);
  }

  }

/**
 * Interface that masks all type unsafe query methods and defines all type safe methods.
 * This type is used when a join is performed on this class as a reference.
 **/
  public interface MdAttributeQueryMultiReferenceIF extends com.runwaysdk.system.metadata.MetadataQuery.MetadataQueryMultiReferenceIF
  {


    public com.runwaysdk.query.Condition containsAny(com.runwaysdk.system.metadata.MdAttribute ... mdAttribute);
    public com.runwaysdk.query.Condition notContainsAny(com.runwaysdk.system.metadata.MdAttribute ... mdAttribute);
    public com.runwaysdk.query.Condition containsAll(com.runwaysdk.system.metadata.MdAttribute ... mdAttribute);
    public com.runwaysdk.query.Condition notContainsAll(com.runwaysdk.system.metadata.MdAttribute ... mdAttribute);
    public com.runwaysdk.query.Condition containsExactly(com.runwaysdk.system.metadata.MdAttribute ... mdAttribute);
  }

/**
 * Implements type safe query methods.
 * This type is used when a join is performed on this class as a reference.
 **/
  public static class MdAttributeQueryMultiReference extends com.runwaysdk.system.metadata.MetadataQuery.MetadataQueryMultiReference
 implements MdAttributeQueryMultiReferenceIF

  {

  public MdAttributeQueryMultiReference(com.runwaysdk.dataaccess.MdAttributeMultiReferenceDAOIF mdAttributeIF, String attributeNamespace, String definingTableName, String definingTableAlias, String mdMultiReferenceTableName, com.runwaysdk.dataaccess.MdBusinessDAOIF referenceMdBusinessIF, String referenceTableAlias, com.runwaysdk.query.ComponentQuery rootQuery, java.util.Set<com.runwaysdk.query.Join> tableJoinSet, String alias, String displayLabel)
  {
    super(mdAttributeIF, attributeNamespace, definingTableName, definingTableAlias, mdMultiReferenceTableName, referenceMdBusinessIF, referenceTableAlias, rootQuery, tableJoinSet, alias, displayLabel);

  }



    public com.runwaysdk.query.Condition containsAny(com.runwaysdk.system.metadata.MdAttribute ... mdAttribute)  {

      String[] itemIdArray = new String[mdAttribute.length]; 

      for (int i=0; i<mdAttribute.length; i++)
      {
        itemIdArray[i] = mdAttribute[i].getId();
      }

      return this.containsAny(itemIdArray);
  }

    public com.runwaysdk.query.Condition notContainsAny(com.runwaysdk.system.metadata.MdAttribute ... mdAttribute)  {

      String[] itemIdArray = new String[mdAttribute.length]; 

      for (int i=0; i<mdAttribute.length; i++)
      {
        itemIdArray[i] = mdAttribute[i].getId();
      }

      return this.notContainsAny(itemIdArray);
  }

    public com.runwaysdk.query.Condition containsAll(com.runwaysdk.system.metadata.MdAttribute ... mdAttribute)  {

      String[] itemIdArray = new String[mdAttribute.length]; 

      for (int i=0; i<mdAttribute.length; i++)
      {
        itemIdArray[i] = mdAttribute[i].getId();
      }

      return this.containsAll(itemIdArray);
  }

    public com.runwaysdk.query.Condition notContainsAll(com.runwaysdk.system.metadata.MdAttribute ... mdAttribute)  {

      String[] itemIdArray = new String[mdAttribute.length]; 

      for (int i=0; i<mdAttribute.length; i++)
      {
        itemIdArray[i] = mdAttribute[i].getId();
      }

      return this.notContainsAll(itemIdArray);
  }

    public com.runwaysdk.query.Condition containsExactly(com.runwaysdk.system.metadata.MdAttribute ... mdAttribute)  {

      String[] itemIdArray = new String[mdAttribute.length]; 

      for (int i=0; i<mdAttribute.length; i++)
      {
        itemIdArray[i] = mdAttribute[i].getId();
      }

      return this.containsExactly(itemIdArray);
  }
  }
}
