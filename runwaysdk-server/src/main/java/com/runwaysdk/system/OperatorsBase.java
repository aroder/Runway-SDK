package com.runwaysdk.system;

@com.runwaysdk.business.ClassSignature(hash = -1816639219)
/**
 * This class is generated automatically.
 * DO NOT MAKE CHANGES TO IT - THEY WILL BE OVERWRITTEN
 * Custom business logic should be added to Operators.java
 *
 * @author Autogenerated by RunwaySDK
 */
public abstract class OperatorsBase extends com.runwaysdk.system.EnumerationMaster
{
  public final static String CLASS = "com.runwaysdk.system.Operators";
  public static java.lang.String OPERATORSYMBOL = "operatorSymbol";
  private static final long serialVersionUID = -1816639219;
  
  public OperatorsBase()
  {
    super();
  }
  
  public String getOperatorSymbol()
  {
    return getValue(OPERATORSYMBOL);
  }
  
  public void validateOperatorSymbol()
  {
    this.validateAttribute(OPERATORSYMBOL);
  }
  
  public static com.runwaysdk.dataaccess.MdAttributeCharacterDAOIF getOperatorSymbolMd()
  {
    com.runwaysdk.dataaccess.MdClassDAOIF mdClassIF = com.runwaysdk.dataaccess.metadata.MdClassDAO.getMdClassDAO(com.runwaysdk.system.Operators.CLASS);
    return (com.runwaysdk.dataaccess.MdAttributeCharacterDAOIF)mdClassIF.definesAttribute(OPERATORSYMBOL);
  }
  
  public void setOperatorSymbol(String value)
  {
    if(value == null)
    {
      setValue(OPERATORSYMBOL, "");
    }
    else
    {
      setValue(OPERATORSYMBOL, value);
    }
  }
  
  protected String getDeclaredType()
  {
    return CLASS;
  }
  
  public static Operators get(String id)
  {
    return (Operators) com.runwaysdk.business.Business.get(id);
  }
  
  public static Operators getByKey(String key)
  {
    return (Operators) com.runwaysdk.business.Business.get(CLASS, key);
  }
  
  public static Operators getEnumeration(String enumName)
  {
    return (Operators) com.runwaysdk.business.Business.getEnumeration(com.runwaysdk.system.Operators.CLASS ,enumName);
  }
  
  public static Operators lock(java.lang.String id)
  {
    Operators _instance = Operators.get(id);
    _instance.lock();
    
    return _instance;
  }
  
  public static Operators unlock(java.lang.String id)
  {
    Operators _instance = Operators.get(id);
    _instance.unlock();
    
    return _instance;
  }
  
  public String toString()
  {
    if (this.isNew())
    {
      return "New: "+ this.getClassDisplayLabel();
    }
    else
    {
      return super.toString();
    }
  }
}
