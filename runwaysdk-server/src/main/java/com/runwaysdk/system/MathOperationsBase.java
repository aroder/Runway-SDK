package com.runwaysdk.system;

@com.runwaysdk.business.ClassSignature(hash = 1420778359)
/**
 * This class is generated automatically.
 * DO NOT MAKE CHANGES TO IT - THEY WILL BE OVERWRITTEN
 * Custom business logic should be added to MathOperations.java
 *
 * @author Autogenerated by RunwaySDK
 */
public abstract class MathOperationsBase extends com.runwaysdk.system.EnumerationMaster
{
  public final static String CLASS = "com.runwaysdk.system.MathOperations";
  public static java.lang.String OPERATIONSYMBOL = "operationSymbol";
  private static final long serialVersionUID = 1420778359;
  
  public MathOperationsBase()
  {
    super();
  }
  
  public String getOperationSymbol()
  {
    return getValue(OPERATIONSYMBOL);
  }
  
  public void validateOperationSymbol()
  {
    this.validateAttribute(OPERATIONSYMBOL);
  }
  
  public static com.runwaysdk.dataaccess.MdAttributeCharacterDAOIF getOperationSymbolMd()
  {
    com.runwaysdk.dataaccess.MdClassDAOIF mdClassIF = com.runwaysdk.dataaccess.metadata.MdClassDAO.getMdClassDAO(com.runwaysdk.system.MathOperations.CLASS);
    return (com.runwaysdk.dataaccess.MdAttributeCharacterDAOIF)mdClassIF.definesAttribute(OPERATIONSYMBOL);
  }
  
  public void setOperationSymbol(String value)
  {
    if(value == null)
    {
      setValue(OPERATIONSYMBOL, "");
    }
    else
    {
      setValue(OPERATIONSYMBOL, value);
    }
  }
  
  protected String getDeclaredType()
  {
    return CLASS;
  }
  
  public static MathOperations get(String id)
  {
    return (MathOperations) com.runwaysdk.business.Business.get(id);
  }
  
  public static MathOperations getByKey(String key)
  {
    return (MathOperations) com.runwaysdk.business.Business.get(CLASS, key);
  }
  
  public static MathOperations getEnumeration(String enumName)
  {
    return (MathOperations) com.runwaysdk.business.Business.getEnumeration(com.runwaysdk.system.MathOperations.CLASS ,enumName);
  }
  
  public static MathOperations lock(java.lang.String id)
  {
    MathOperations _instance = MathOperations.get(id);
    _instance.lock();
    
    return _instance;
  }
  
  public static MathOperations unlock(java.lang.String id)
  {
    MathOperations _instance = MathOperations.get(id);
    _instance.unlock();
    
    return _instance;
  }
  
  public String toString()
  {
    if (this.isNew())
    {
      return "New: "+ this.getClassDisplayLabel();
    }
    else
    {
      return super.toString();
    }
  }
}
