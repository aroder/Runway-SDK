package com.runwaysdk.system.scheduler;

@com.runwaysdk.business.ClassSignature(hash = -1008179883)
/**
 * This class is generated automatically.
 * DO NOT MAKE CHANGES TO IT - THEY WILL BE OVERWRITTEN
 * Custom business logic should be added to Job.java
 *
 * @author Autogenerated by RunwaySDK
 */
public  class JobQuery extends com.runwaysdk.query.GeneratedBusinessQuery

{

  public JobQuery(com.runwaysdk.query.QueryFactory componentQueryFactory)
  {
     super();
    if (this.getComponentQuery() == null)
    {
      com.runwaysdk.business.BusinessQuery businessQuery = componentQueryFactory.businessQuery(this.getClassType());

       this.setBusinessQuery(businessQuery);
    }
  }

  public JobQuery(com.runwaysdk.query.ValueQuery valueQuery)
  {
     super();
    if (this.getComponentQuery() == null)
    {
      com.runwaysdk.business.BusinessQuery businessQuery = new com.runwaysdk.business.BusinessQuery(valueQuery, this.getClassType());

       this.setBusinessQuery(businessQuery);
    }
  }

  public String getClassType()
  {
    return com.runwaysdk.system.scheduler.Job.CLASS;
  }
  public com.runwaysdk.query.SelectableBoolean getCancelable()
  {
    return getCancelable(null);

  }
 
  public com.runwaysdk.query.SelectableBoolean getCancelable(String alias)
  {
    return (com.runwaysdk.query.SelectableBoolean)this.getComponentQuery().get(com.runwaysdk.system.scheduler.Job.CANCELABLE, alias, null);

  }
 
  public com.runwaysdk.query.SelectableBoolean getCancelable(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableBoolean)this.getComponentQuery().get(com.runwaysdk.system.scheduler.Job.CANCELABLE, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableBoolean getCanceled()
  {
    return getCanceled(null);

  }
 
  public com.runwaysdk.query.SelectableBoolean getCanceled(String alias)
  {
    return (com.runwaysdk.query.SelectableBoolean)this.getComponentQuery().get(com.runwaysdk.system.scheduler.Job.CANCELED, alias, null);

  }
 
  public com.runwaysdk.query.SelectableBoolean getCanceled(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableBoolean)this.getComponentQuery().get(com.runwaysdk.system.scheduler.Job.CANCELED, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableBoolean getCompleted()
  {
    return getCompleted(null);

  }
 
  public com.runwaysdk.query.SelectableBoolean getCompleted(String alias)
  {
    return (com.runwaysdk.query.SelectableBoolean)this.getComponentQuery().get(com.runwaysdk.system.scheduler.Job.COMPLETED, alias, null);

  }
 
  public com.runwaysdk.query.SelectableBoolean getCompleted(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableBoolean)this.getComponentQuery().get(com.runwaysdk.system.scheduler.Job.COMPLETED, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableMoment getCreateDate()
  {
    return getCreateDate(null);

  }
 
  public com.runwaysdk.query.SelectableMoment getCreateDate(String alias)
  {
    return (com.runwaysdk.query.SelectableMoment)this.getComponentQuery().get(com.runwaysdk.system.scheduler.Job.CREATEDATE, alias, null);

  }
 
  public com.runwaysdk.query.SelectableMoment getCreateDate(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableMoment)this.getComponentQuery().get(com.runwaysdk.system.scheduler.Job.CREATEDATE, alias, displayLabel);

  }
  public com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF getCreatedBy()
  {
    return getCreatedBy(null);

  }
 
  public com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF getCreatedBy(String alias)
  {

    com.runwaysdk.dataaccess.MdAttributeDAOIF mdAttributeIF = this.getComponentQuery().getMdAttributeROfromMap(com.runwaysdk.system.scheduler.Job.CREATEDBY);

    return (com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF)this.getComponentQuery().internalAttributeFactory(com.runwaysdk.system.scheduler.Job.CREATEDBY, mdAttributeIF, this, alias, null);

  }
 
  public com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF getCreatedBy(String alias, String displayLabel)
  {

    com.runwaysdk.dataaccess.MdAttributeDAOIF mdAttributeIF = this.getComponentQuery().getMdAttributeROfromMap(com.runwaysdk.system.scheduler.Job.CREATEDBY);

    return (com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF)this.getComponentQuery().internalAttributeFactory(com.runwaysdk.system.scheduler.Job.CREATEDBY, mdAttributeIF, this, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableChar getCronExpression()
  {
    return getCronExpression(null);

  }
 
  public com.runwaysdk.query.SelectableChar getCronExpression(String alias)
  {
    return (com.runwaysdk.query.SelectableChar)this.getComponentQuery().get(com.runwaysdk.system.scheduler.Job.CRONEXPRESSION, alias, null);

  }
 
  public com.runwaysdk.query.SelectableChar getCronExpression(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableChar)this.getComponentQuery().get(com.runwaysdk.system.scheduler.Job.CRONEXPRESSION, alias, displayLabel);

  }
  public com.runwaysdk.system.scheduler.JobDisplayLabelQuery.JobDisplayLabelQueryStructIF getDisplayLabel()
  {
    return getDisplayLabel(null);

  }
 
  public com.runwaysdk.system.scheduler.JobDisplayLabelQuery.JobDisplayLabelQueryStructIF getDisplayLabel(String alias)
  {

    com.runwaysdk.dataaccess.MdAttributeDAOIF mdAttributeIF = this.getComponentQuery().getMdAttributeROfromMap(com.runwaysdk.system.scheduler.Job.DISPLAYLABEL);

    return (com.runwaysdk.system.scheduler.JobDisplayLabelQuery.JobDisplayLabelQueryStructIF)this.getComponentQuery().internalAttributeFactory(com.runwaysdk.system.scheduler.Job.DISPLAYLABEL, mdAttributeIF, this, alias, null);

  }
 
  public com.runwaysdk.system.scheduler.JobDisplayLabelQuery.JobDisplayLabelQueryStructIF getDisplayLabel(String alias, String displayLabel)
  {

    com.runwaysdk.dataaccess.MdAttributeDAOIF mdAttributeIF = this.getComponentQuery().getMdAttributeROfromMap(com.runwaysdk.system.scheduler.Job.DISPLAYLABEL);

    return (com.runwaysdk.system.scheduler.JobDisplayLabelQuery.JobDisplayLabelQueryStructIF)this.getComponentQuery().internalAttributeFactory(com.runwaysdk.system.scheduler.Job.DISPLAYLABEL, mdAttributeIF, this, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableMoment getEndTime()
  {
    return getEndTime(null);

  }
 
  public com.runwaysdk.query.SelectableMoment getEndTime(String alias)
  {
    return (com.runwaysdk.query.SelectableMoment)this.getComponentQuery().get(com.runwaysdk.system.scheduler.Job.ENDTIME, alias, null);

  }
 
  public com.runwaysdk.query.SelectableMoment getEndTime(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableMoment)this.getComponentQuery().get(com.runwaysdk.system.scheduler.Job.ENDTIME, alias, displayLabel);

  }
  public com.runwaysdk.system.metadata.MdDomainQuery.MdDomainQueryReferenceIF getEntityDomain()
  {
    return getEntityDomain(null);

  }
 
  public com.runwaysdk.system.metadata.MdDomainQuery.MdDomainQueryReferenceIF getEntityDomain(String alias)
  {

    com.runwaysdk.dataaccess.MdAttributeDAOIF mdAttributeIF = this.getComponentQuery().getMdAttributeROfromMap(com.runwaysdk.system.scheduler.Job.ENTITYDOMAIN);

    return (com.runwaysdk.system.metadata.MdDomainQuery.MdDomainQueryReferenceIF)this.getComponentQuery().internalAttributeFactory(com.runwaysdk.system.scheduler.Job.ENTITYDOMAIN, mdAttributeIF, this, alias, null);

  }
 
  public com.runwaysdk.system.metadata.MdDomainQuery.MdDomainQueryReferenceIF getEntityDomain(String alias, String displayLabel)
  {

    com.runwaysdk.dataaccess.MdAttributeDAOIF mdAttributeIF = this.getComponentQuery().getMdAttributeROfromMap(com.runwaysdk.system.scheduler.Job.ENTITYDOMAIN);

    return (com.runwaysdk.system.metadata.MdDomainQuery.MdDomainQueryReferenceIF)this.getComponentQuery().internalAttributeFactory(com.runwaysdk.system.scheduler.Job.ENTITYDOMAIN, mdAttributeIF, this, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableChar getId()
  {
    return getId(null);

  }
 
  public com.runwaysdk.query.SelectableChar getId(String alias)
  {
    return (com.runwaysdk.query.SelectableChar)this.getComponentQuery().get(com.runwaysdk.system.scheduler.Job.ID, alias, null);

  }
 
  public com.runwaysdk.query.SelectableChar getId(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableChar)this.getComponentQuery().get(com.runwaysdk.system.scheduler.Job.ID, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableChar getJobId()
  {
    return getJobId(null);

  }
 
  public com.runwaysdk.query.SelectableChar getJobId(String alias)
  {
    return (com.runwaysdk.query.SelectableChar)this.getComponentQuery().get(com.runwaysdk.system.scheduler.Job.JOBID, alias, null);

  }
 
  public com.runwaysdk.query.SelectableChar getJobId(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableChar)this.getComponentQuery().get(com.runwaysdk.system.scheduler.Job.JOBID, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableChar getKeyName()
  {
    return getKeyName(null);

  }
 
  public com.runwaysdk.query.SelectableChar getKeyName(String alias)
  {
    return (com.runwaysdk.query.SelectableChar)this.getComponentQuery().get(com.runwaysdk.system.scheduler.Job.KEYNAME, alias, null);

  }
 
  public com.runwaysdk.query.SelectableChar getKeyName(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableChar)this.getComponentQuery().get(com.runwaysdk.system.scheduler.Job.KEYNAME, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableMoment getLastRun()
  {
    return getLastRun(null);

  }
 
  public com.runwaysdk.query.SelectableMoment getLastRun(String alias)
  {
    return (com.runwaysdk.query.SelectableMoment)this.getComponentQuery().get(com.runwaysdk.system.scheduler.Job.LASTRUN, alias, null);

  }
 
  public com.runwaysdk.query.SelectableMoment getLastRun(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableMoment)this.getComponentQuery().get(com.runwaysdk.system.scheduler.Job.LASTRUN, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableMoment getLastUpdateDate()
  {
    return getLastUpdateDate(null);

  }
 
  public com.runwaysdk.query.SelectableMoment getLastUpdateDate(String alias)
  {
    return (com.runwaysdk.query.SelectableMoment)this.getComponentQuery().get(com.runwaysdk.system.scheduler.Job.LASTUPDATEDATE, alias, null);

  }
 
  public com.runwaysdk.query.SelectableMoment getLastUpdateDate(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableMoment)this.getComponentQuery().get(com.runwaysdk.system.scheduler.Job.LASTUPDATEDATE, alias, displayLabel);

  }
  public com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF getLastUpdatedBy()
  {
    return getLastUpdatedBy(null);

  }
 
  public com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF getLastUpdatedBy(String alias)
  {

    com.runwaysdk.dataaccess.MdAttributeDAOIF mdAttributeIF = this.getComponentQuery().getMdAttributeROfromMap(com.runwaysdk.system.scheduler.Job.LASTUPDATEDBY);

    return (com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF)this.getComponentQuery().internalAttributeFactory(com.runwaysdk.system.scheduler.Job.LASTUPDATEDBY, mdAttributeIF, this, alias, null);

  }
 
  public com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF getLastUpdatedBy(String alias, String displayLabel)
  {

    com.runwaysdk.dataaccess.MdAttributeDAOIF mdAttributeIF = this.getComponentQuery().getMdAttributeROfromMap(com.runwaysdk.system.scheduler.Job.LASTUPDATEDBY);

    return (com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF)this.getComponentQuery().internalAttributeFactory(com.runwaysdk.system.scheduler.Job.LASTUPDATEDBY, mdAttributeIF, this, alias, displayLabel);

  }
  public com.runwaysdk.system.UsersQuery.UsersQueryReferenceIF getLockedBy()
  {
    return getLockedBy(null);

  }
 
  public com.runwaysdk.system.UsersQuery.UsersQueryReferenceIF getLockedBy(String alias)
  {

    com.runwaysdk.dataaccess.MdAttributeDAOIF mdAttributeIF = this.getComponentQuery().getMdAttributeROfromMap(com.runwaysdk.system.scheduler.Job.LOCKEDBY);

    return (com.runwaysdk.system.UsersQuery.UsersQueryReferenceIF)this.getComponentQuery().internalAttributeFactory(com.runwaysdk.system.scheduler.Job.LOCKEDBY, mdAttributeIF, this, alias, null);

  }
 
  public com.runwaysdk.system.UsersQuery.UsersQueryReferenceIF getLockedBy(String alias, String displayLabel)
  {

    com.runwaysdk.dataaccess.MdAttributeDAOIF mdAttributeIF = this.getComponentQuery().getMdAttributeROfromMap(com.runwaysdk.system.scheduler.Job.LOCKEDBY);

    return (com.runwaysdk.system.UsersQuery.UsersQueryReferenceIF)this.getComponentQuery().internalAttributeFactory(com.runwaysdk.system.scheduler.Job.LOCKEDBY, mdAttributeIF, this, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableInteger getMaxRetries()
  {
    return getMaxRetries(null);

  }
 
  public com.runwaysdk.query.SelectableInteger getMaxRetries(String alias)
  {
    return (com.runwaysdk.query.SelectableInteger)this.getComponentQuery().get(com.runwaysdk.system.scheduler.Job.MAXRETRIES, alias, null);

  }
 
  public com.runwaysdk.query.SelectableInteger getMaxRetries(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableInteger)this.getComponentQuery().get(com.runwaysdk.system.scheduler.Job.MAXRETRIES, alias, displayLabel);

  }
  public com.runwaysdk.system.ActorQuery.ActorQueryReferenceIF getOwner()
  {
    return getOwner(null);

  }
 
  public com.runwaysdk.system.ActorQuery.ActorQueryReferenceIF getOwner(String alias)
  {

    com.runwaysdk.dataaccess.MdAttributeDAOIF mdAttributeIF = this.getComponentQuery().getMdAttributeROfromMap(com.runwaysdk.system.scheduler.Job.OWNER);

    return (com.runwaysdk.system.ActorQuery.ActorQueryReferenceIF)this.getComponentQuery().internalAttributeFactory(com.runwaysdk.system.scheduler.Job.OWNER, mdAttributeIF, this, alias, null);

  }
 
  public com.runwaysdk.system.ActorQuery.ActorQueryReferenceIF getOwner(String alias, String displayLabel)
  {

    com.runwaysdk.dataaccess.MdAttributeDAOIF mdAttributeIF = this.getComponentQuery().getMdAttributeROfromMap(com.runwaysdk.system.scheduler.Job.OWNER);

    return (com.runwaysdk.system.ActorQuery.ActorQueryReferenceIF)this.getComponentQuery().internalAttributeFactory(com.runwaysdk.system.scheduler.Job.OWNER, mdAttributeIF, this, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableBoolean getPauseable()
  {
    return getPauseable(null);

  }
 
  public com.runwaysdk.query.SelectableBoolean getPauseable(String alias)
  {
    return (com.runwaysdk.query.SelectableBoolean)this.getComponentQuery().get(com.runwaysdk.system.scheduler.Job.PAUSEABLE, alias, null);

  }
 
  public com.runwaysdk.query.SelectableBoolean getPauseable(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableBoolean)this.getComponentQuery().get(com.runwaysdk.system.scheduler.Job.PAUSEABLE, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableBoolean getPaused()
  {
    return getPaused(null);

  }
 
  public com.runwaysdk.query.SelectableBoolean getPaused(String alias)
  {
    return (com.runwaysdk.query.SelectableBoolean)this.getComponentQuery().get(com.runwaysdk.system.scheduler.Job.PAUSED, alias, null);

  }
 
  public com.runwaysdk.query.SelectableBoolean getPaused(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableBoolean)this.getComponentQuery().get(com.runwaysdk.system.scheduler.Job.PAUSED, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableBoolean getRemoveOnComplete()
  {
    return getRemoveOnComplete(null);

  }
 
  public com.runwaysdk.query.SelectableBoolean getRemoveOnComplete(String alias)
  {
    return (com.runwaysdk.query.SelectableBoolean)this.getComponentQuery().get(com.runwaysdk.system.scheduler.Job.REMOVEONCOMPLETE, alias, null);

  }
 
  public com.runwaysdk.query.SelectableBoolean getRemoveOnComplete(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableBoolean)this.getComponentQuery().get(com.runwaysdk.system.scheduler.Job.REMOVEONCOMPLETE, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableBoolean getRepeated()
  {
    return getRepeated(null);

  }
 
  public com.runwaysdk.query.SelectableBoolean getRepeated(String alias)
  {
    return (com.runwaysdk.query.SelectableBoolean)this.getComponentQuery().get(com.runwaysdk.system.scheduler.Job.REPEATED, alias, null);

  }
 
  public com.runwaysdk.query.SelectableBoolean getRepeated(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableBoolean)this.getComponentQuery().get(com.runwaysdk.system.scheduler.Job.REPEATED, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableInteger getRetries()
  {
    return getRetries(null);

  }
 
  public com.runwaysdk.query.SelectableInteger getRetries(String alias)
  {
    return (com.runwaysdk.query.SelectableInteger)this.getComponentQuery().get(com.runwaysdk.system.scheduler.Job.RETRIES, alias, null);

  }
 
  public com.runwaysdk.query.SelectableInteger getRetries(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableInteger)this.getComponentQuery().get(com.runwaysdk.system.scheduler.Job.RETRIES, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableBoolean getRunning()
  {
    return getRunning(null);

  }
 
  public com.runwaysdk.query.SelectableBoolean getRunning(String alias)
  {
    return (com.runwaysdk.query.SelectableBoolean)this.getComponentQuery().get(com.runwaysdk.system.scheduler.Job.RUNNING, alias, null);

  }
 
  public com.runwaysdk.query.SelectableBoolean getRunning(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableBoolean)this.getComponentQuery().get(com.runwaysdk.system.scheduler.Job.RUNNING, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableLong getSeq()
  {
    return getSeq(null);

  }
 
  public com.runwaysdk.query.SelectableLong getSeq(String alias)
  {
    return (com.runwaysdk.query.SelectableLong)this.getComponentQuery().get(com.runwaysdk.system.scheduler.Job.SEQ, alias, null);

  }
 
  public com.runwaysdk.query.SelectableLong getSeq(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableLong)this.getComponentQuery().get(com.runwaysdk.system.scheduler.Job.SEQ, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableChar getSiteMaster()
  {
    return getSiteMaster(null);

  }
 
  public com.runwaysdk.query.SelectableChar getSiteMaster(String alias)
  {
    return (com.runwaysdk.query.SelectableChar)this.getComponentQuery().get(com.runwaysdk.system.scheduler.Job.SITEMASTER, alias, null);

  }
 
  public com.runwaysdk.query.SelectableChar getSiteMaster(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableChar)this.getComponentQuery().get(com.runwaysdk.system.scheduler.Job.SITEMASTER, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableMoment getStartTime()
  {
    return getStartTime(null);

  }
 
  public com.runwaysdk.query.SelectableMoment getStartTime(String alias)
  {
    return (com.runwaysdk.query.SelectableMoment)this.getComponentQuery().get(com.runwaysdk.system.scheduler.Job.STARTTIME, alias, null);

  }
 
  public com.runwaysdk.query.SelectableMoment getStartTime(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableMoment)this.getComponentQuery().get(com.runwaysdk.system.scheduler.Job.STARTTIME, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableLong getTimeout()
  {
    return getTimeout(null);

  }
 
  public com.runwaysdk.query.SelectableLong getTimeout(String alias)
  {
    return (com.runwaysdk.query.SelectableLong)this.getComponentQuery().get(com.runwaysdk.system.scheduler.Job.TIMEOUT, alias, null);

  }
 
  public com.runwaysdk.query.SelectableLong getTimeout(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableLong)this.getComponentQuery().get(com.runwaysdk.system.scheduler.Job.TIMEOUT, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableChar getType()
  {
    return getType(null);

  }
 
  public com.runwaysdk.query.SelectableChar getType(String alias)
  {
    return (com.runwaysdk.query.SelectableChar)this.getComponentQuery().get(com.runwaysdk.system.scheduler.Job.TYPE, alias, null);

  }
 
  public com.runwaysdk.query.SelectableChar getType(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableChar)this.getComponentQuery().get(com.runwaysdk.system.scheduler.Job.TYPE, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableInteger getWorkProgress()
  {
    return getWorkProgress(null);

  }
 
  public com.runwaysdk.query.SelectableInteger getWorkProgress(String alias)
  {
    return (com.runwaysdk.query.SelectableInteger)this.getComponentQuery().get(com.runwaysdk.system.scheduler.Job.WORKPROGRESS, alias, null);

  }
 
  public com.runwaysdk.query.SelectableInteger getWorkProgress(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableInteger)this.getComponentQuery().get(com.runwaysdk.system.scheduler.Job.WORKPROGRESS, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableInteger getWorkTotal()
  {
    return getWorkTotal(null);

  }
 
  public com.runwaysdk.query.SelectableInteger getWorkTotal(String alias)
  {
    return (com.runwaysdk.query.SelectableInteger)this.getComponentQuery().get(com.runwaysdk.system.scheduler.Job.WORKTOTAL, alias, null);

  }
 
  public com.runwaysdk.query.SelectableInteger getWorkTotal(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableInteger)this.getComponentQuery().get(com.runwaysdk.system.scheduler.Job.WORKTOTAL, alias, displayLabel);

  }
  protected com.runwaysdk.query.AttributeReference referenceFactory( com.runwaysdk.dataaccess.MdAttributeRefDAOIF mdAttributeIF, String attributeNamespace, String definingTableName, String definingTableAlias,  com.runwaysdk.dataaccess.MdBusinessDAOIF referenceMdBusinessIF, String referenceTableAlias, com.runwaysdk.query.ComponentQuery rootQuery, java.util.Set<com.runwaysdk.query.Join> tableJoinSet, String userDefinedAlias, String userDefinedDisplayLabel)
  {
    String name = mdAttributeIF.definesAttribute();
    
    if (name.equals(com.runwaysdk.system.scheduler.Job.CREATEDBY)) 
    {
       return new com.runwaysdk.system.SingleActorQuery.SingleActorQueryReference((com.runwaysdk.dataaccess.MdAttributeRefDAOIF)mdAttributeIF, attributeNamespace, definingTableName, definingTableAlias, referenceMdBusinessIF, referenceTableAlias, rootQuery, tableJoinSet, userDefinedAlias, userDefinedDisplayLabel);
    }
    else if (name.equals(com.runwaysdk.system.scheduler.Job.ENTITYDOMAIN)) 
    {
       return new com.runwaysdk.system.metadata.MdDomainQuery.MdDomainQueryReference((com.runwaysdk.dataaccess.MdAttributeRefDAOIF)mdAttributeIF, attributeNamespace, definingTableName, definingTableAlias, referenceMdBusinessIF, referenceTableAlias, rootQuery, tableJoinSet, userDefinedAlias, userDefinedDisplayLabel);
    }
    else if (name.equals(com.runwaysdk.system.scheduler.Job.LASTUPDATEDBY)) 
    {
       return new com.runwaysdk.system.SingleActorQuery.SingleActorQueryReference((com.runwaysdk.dataaccess.MdAttributeRefDAOIF)mdAttributeIF, attributeNamespace, definingTableName, definingTableAlias, referenceMdBusinessIF, referenceTableAlias, rootQuery, tableJoinSet, userDefinedAlias, userDefinedDisplayLabel);
    }
    else if (name.equals(com.runwaysdk.system.scheduler.Job.LOCKEDBY)) 
    {
       return new com.runwaysdk.system.UsersQuery.UsersQueryReference((com.runwaysdk.dataaccess.MdAttributeRefDAOIF)mdAttributeIF, attributeNamespace, definingTableName, definingTableAlias, referenceMdBusinessIF, referenceTableAlias, rootQuery, tableJoinSet, userDefinedAlias, userDefinedDisplayLabel);
    }
    else if (name.equals(com.runwaysdk.system.scheduler.Job.OWNER)) 
    {
       return new com.runwaysdk.system.ActorQuery.ActorQueryReference((com.runwaysdk.dataaccess.MdAttributeRefDAOIF)mdAttributeIF, attributeNamespace, definingTableName, definingTableAlias, referenceMdBusinessIF, referenceTableAlias, rootQuery, tableJoinSet, userDefinedAlias, userDefinedDisplayLabel);
    }
    else 
    {
      String error = "Attribute type ["+mdAttributeIF.getType()+"] is invalid.";
      throw new com.runwaysdk.query.QueryException(error);
    }
  }

  protected com.runwaysdk.query.AttributeLocal localFactory( com.runwaysdk.dataaccess.MdAttributeLocalDAOIF mdAttributeIF, String attributeNamespace, String definingTableName, String definingTableAlias,  com.runwaysdk.dataaccess.MdLocalStructDAOIF mdLocalStructIF, String structTableAlias, com.runwaysdk.query.ComponentQuery rootQuery, java.util.Set<com.runwaysdk.query.Join> tableJoinSet, String userDefinedAlias, String userDefinedDisplayLabel)
  {
    String name = mdAttributeIF.definesAttribute();
    
    if (name.equals(com.runwaysdk.system.scheduler.Job.DISPLAYLABEL)) 
    {
       return new com.runwaysdk.system.scheduler.JobDisplayLabelQuery.JobDisplayLabelQueryStruct((com.runwaysdk.dataaccess.MdAttributeLocalDAOIF)mdAttributeIF,  attributeNamespace, definingTableName, definingTableAlias, mdLocalStructIF, structTableAlias, rootQuery, tableJoinSet, userDefinedAlias, userDefinedDisplayLabel);
    }
    else 
    {
      String error = "Attribute type ["+mdAttributeIF.getType()+"] is invalid.";
      throw new com.runwaysdk.query.QueryException(error);
    }
  }

  /**  
   * Returns an iterator of Business objects that match the query criteria specified
   * on this query object. 
   * @return iterator of Business objects that match the query criteria specified
   * on this query object.
   */
  public com.runwaysdk.query.OIterator<? extends Job> getIterator()
  {
    this.checkNotUsedInValueQuery();
    String sqlStmt;
    if (_limit != null && _skip != null)
    {
      sqlStmt = this.getComponentQuery().getSQL(_limit, _skip);
    }
    else
    {
      sqlStmt = this.getComponentQuery().getSQL();
    }
    java.util.Map<String, com.runwaysdk.query.ColumnInfo> columnInfoMap = this.getComponentQuery().getColumnInfoMap();

    java.sql.ResultSet results = com.runwaysdk.dataaccess.database.Database.query(sqlStmt);
    return new com.runwaysdk.business.BusinessIterator<Job>(this.getComponentQuery().getMdEntityIF(), columnInfoMap, results);
  }


/**
 * Interface that masks all type unsafe query methods and defines all type safe methods.
 * This type is used when a join is performed on this class as a reference.
 **/
  public interface JobQueryReferenceIF extends com.runwaysdk.query.SelectableReference
  {

    public com.runwaysdk.query.SelectableBoolean getCancelable();
    public com.runwaysdk.query.SelectableBoolean getCancelable(String alias);
    public com.runwaysdk.query.SelectableBoolean getCancelable(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableBoolean getCanceled();
    public com.runwaysdk.query.SelectableBoolean getCanceled(String alias);
    public com.runwaysdk.query.SelectableBoolean getCanceled(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableBoolean getCompleted();
    public com.runwaysdk.query.SelectableBoolean getCompleted(String alias);
    public com.runwaysdk.query.SelectableBoolean getCompleted(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableMoment getCreateDate();
    public com.runwaysdk.query.SelectableMoment getCreateDate(String alias);
    public com.runwaysdk.query.SelectableMoment getCreateDate(String alias, String displayLabel);
    public com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF getCreatedBy();
    public com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF getCreatedBy(String alias);
    public com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF getCreatedBy(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableChar getCronExpression();
    public com.runwaysdk.query.SelectableChar getCronExpression(String alias);
    public com.runwaysdk.query.SelectableChar getCronExpression(String alias, String displayLabel);
    public com.runwaysdk.system.scheduler.JobDisplayLabelQuery.JobDisplayLabelQueryStructIF getDisplayLabel();
    public com.runwaysdk.system.scheduler.JobDisplayLabelQuery.JobDisplayLabelQueryStructIF getDisplayLabel(String alias);
    public com.runwaysdk.system.scheduler.JobDisplayLabelQuery.JobDisplayLabelQueryStructIF getDisplayLabel(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableMoment getEndTime();
    public com.runwaysdk.query.SelectableMoment getEndTime(String alias);
    public com.runwaysdk.query.SelectableMoment getEndTime(String alias, String displayLabel);
    public com.runwaysdk.system.metadata.MdDomainQuery.MdDomainQueryReferenceIF getEntityDomain();
    public com.runwaysdk.system.metadata.MdDomainQuery.MdDomainQueryReferenceIF getEntityDomain(String alias);
    public com.runwaysdk.system.metadata.MdDomainQuery.MdDomainQueryReferenceIF getEntityDomain(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableChar getId();
    public com.runwaysdk.query.SelectableChar getId(String alias);
    public com.runwaysdk.query.SelectableChar getId(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableChar getJobId();
    public com.runwaysdk.query.SelectableChar getJobId(String alias);
    public com.runwaysdk.query.SelectableChar getJobId(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableChar getKeyName();
    public com.runwaysdk.query.SelectableChar getKeyName(String alias);
    public com.runwaysdk.query.SelectableChar getKeyName(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableMoment getLastRun();
    public com.runwaysdk.query.SelectableMoment getLastRun(String alias);
    public com.runwaysdk.query.SelectableMoment getLastRun(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableMoment getLastUpdateDate();
    public com.runwaysdk.query.SelectableMoment getLastUpdateDate(String alias);
    public com.runwaysdk.query.SelectableMoment getLastUpdateDate(String alias, String displayLabel);
    public com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF getLastUpdatedBy();
    public com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF getLastUpdatedBy(String alias);
    public com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF getLastUpdatedBy(String alias, String displayLabel);
    public com.runwaysdk.system.UsersQuery.UsersQueryReferenceIF getLockedBy();
    public com.runwaysdk.system.UsersQuery.UsersQueryReferenceIF getLockedBy(String alias);
    public com.runwaysdk.system.UsersQuery.UsersQueryReferenceIF getLockedBy(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableInteger getMaxRetries();
    public com.runwaysdk.query.SelectableInteger getMaxRetries(String alias);
    public com.runwaysdk.query.SelectableInteger getMaxRetries(String alias, String displayLabel);
    public com.runwaysdk.system.ActorQuery.ActorQueryReferenceIF getOwner();
    public com.runwaysdk.system.ActorQuery.ActorQueryReferenceIF getOwner(String alias);
    public com.runwaysdk.system.ActorQuery.ActorQueryReferenceIF getOwner(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableBoolean getPauseable();
    public com.runwaysdk.query.SelectableBoolean getPauseable(String alias);
    public com.runwaysdk.query.SelectableBoolean getPauseable(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableBoolean getPaused();
    public com.runwaysdk.query.SelectableBoolean getPaused(String alias);
    public com.runwaysdk.query.SelectableBoolean getPaused(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableBoolean getRemoveOnComplete();
    public com.runwaysdk.query.SelectableBoolean getRemoveOnComplete(String alias);
    public com.runwaysdk.query.SelectableBoolean getRemoveOnComplete(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableBoolean getRepeated();
    public com.runwaysdk.query.SelectableBoolean getRepeated(String alias);
    public com.runwaysdk.query.SelectableBoolean getRepeated(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableInteger getRetries();
    public com.runwaysdk.query.SelectableInteger getRetries(String alias);
    public com.runwaysdk.query.SelectableInteger getRetries(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableBoolean getRunning();
    public com.runwaysdk.query.SelectableBoolean getRunning(String alias);
    public com.runwaysdk.query.SelectableBoolean getRunning(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableLong getSeq();
    public com.runwaysdk.query.SelectableLong getSeq(String alias);
    public com.runwaysdk.query.SelectableLong getSeq(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableChar getSiteMaster();
    public com.runwaysdk.query.SelectableChar getSiteMaster(String alias);
    public com.runwaysdk.query.SelectableChar getSiteMaster(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableMoment getStartTime();
    public com.runwaysdk.query.SelectableMoment getStartTime(String alias);
    public com.runwaysdk.query.SelectableMoment getStartTime(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableLong getTimeout();
    public com.runwaysdk.query.SelectableLong getTimeout(String alias);
    public com.runwaysdk.query.SelectableLong getTimeout(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableChar getType();
    public com.runwaysdk.query.SelectableChar getType(String alias);
    public com.runwaysdk.query.SelectableChar getType(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableInteger getWorkProgress();
    public com.runwaysdk.query.SelectableInteger getWorkProgress(String alias);
    public com.runwaysdk.query.SelectableInteger getWorkProgress(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableInteger getWorkTotal();
    public com.runwaysdk.query.SelectableInteger getWorkTotal(String alias);
    public com.runwaysdk.query.SelectableInteger getWorkTotal(String alias, String displayLabel);

    public com.runwaysdk.query.BasicCondition EQ(com.runwaysdk.system.scheduler.Job job);

    public com.runwaysdk.query.BasicCondition NE(com.runwaysdk.system.scheduler.Job job);

  }

/**
 * Implements type safe query methods.
 * This type is used when a join is performed on this class as a reference.
 **/
  public static class JobQueryReference extends com.runwaysdk.query.AttributeReference
 implements JobQueryReferenceIF

  {

  public JobQueryReference(com.runwaysdk.dataaccess.MdAttributeRefDAOIF mdAttributeIF, String attributeNamespace, String definingTableName, String definingTableAlias, com.runwaysdk.dataaccess.MdBusinessDAOIF referenceMdBusinessIF, String referenceTableAlias, com.runwaysdk.query.ComponentQuery rootQuery, java.util.Set<com.runwaysdk.query.Join> tableJoinSet, String alias, String displayLabel)
  {
    super(mdAttributeIF, attributeNamespace, definingTableName, definingTableAlias, referenceMdBusinessIF, referenceTableAlias, rootQuery, tableJoinSet, alias, displayLabel);

  }


    public com.runwaysdk.query.BasicCondition EQ(com.runwaysdk.system.scheduler.Job job)
    {
      if(job == null) return this.EQ((java.lang.String)null);
      return this.EQ(job.getId());
    }

    public com.runwaysdk.query.BasicCondition NE(com.runwaysdk.system.scheduler.Job job)
    {
      if(job == null) return this.NE((java.lang.String)null);
      return this.NE(job.getId());
    }

  public com.runwaysdk.query.SelectableBoolean getCancelable()
  {
    return getCancelable(null);

  }
 
  public com.runwaysdk.query.SelectableBoolean getCancelable(String alias)
  {
    return (com.runwaysdk.query.SelectableBoolean)this.get(com.runwaysdk.system.scheduler.Job.CANCELABLE, alias, null);

  }
 
  public com.runwaysdk.query.SelectableBoolean getCancelable(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableBoolean)this.get(com.runwaysdk.system.scheduler.Job.CANCELABLE, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableBoolean getCanceled()
  {
    return getCanceled(null);

  }
 
  public com.runwaysdk.query.SelectableBoolean getCanceled(String alias)
  {
    return (com.runwaysdk.query.SelectableBoolean)this.get(com.runwaysdk.system.scheduler.Job.CANCELED, alias, null);

  }
 
  public com.runwaysdk.query.SelectableBoolean getCanceled(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableBoolean)this.get(com.runwaysdk.system.scheduler.Job.CANCELED, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableBoolean getCompleted()
  {
    return getCompleted(null);

  }
 
  public com.runwaysdk.query.SelectableBoolean getCompleted(String alias)
  {
    return (com.runwaysdk.query.SelectableBoolean)this.get(com.runwaysdk.system.scheduler.Job.COMPLETED, alias, null);

  }
 
  public com.runwaysdk.query.SelectableBoolean getCompleted(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableBoolean)this.get(com.runwaysdk.system.scheduler.Job.COMPLETED, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableMoment getCreateDate()
  {
    return getCreateDate(null);

  }
 
  public com.runwaysdk.query.SelectableMoment getCreateDate(String alias)
  {
    return (com.runwaysdk.query.SelectableMoment)this.get(com.runwaysdk.system.scheduler.Job.CREATEDATE, alias, null);

  }
 
  public com.runwaysdk.query.SelectableMoment getCreateDate(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableMoment)this.get(com.runwaysdk.system.scheduler.Job.CREATEDATE, alias, displayLabel);

  }
  public com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF getCreatedBy()
  {
    return getCreatedBy(null);

  }
 
  public com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF getCreatedBy(String alias)
  {
    return (com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF)this.get(com.runwaysdk.system.scheduler.Job.CREATEDBY, alias, null);

  }
 
  public com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF getCreatedBy(String alias, String displayLabel)
  {
    return (com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF)this.get(com.runwaysdk.system.scheduler.Job.CREATEDBY,  alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableChar getCronExpression()
  {
    return getCronExpression(null);

  }
 
  public com.runwaysdk.query.SelectableChar getCronExpression(String alias)
  {
    return (com.runwaysdk.query.SelectableChar)this.get(com.runwaysdk.system.scheduler.Job.CRONEXPRESSION, alias, null);

  }
 
  public com.runwaysdk.query.SelectableChar getCronExpression(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableChar)this.get(com.runwaysdk.system.scheduler.Job.CRONEXPRESSION, alias, displayLabel);

  }
  public com.runwaysdk.system.scheduler.JobDisplayLabelQuery.JobDisplayLabelQueryStructIF getDisplayLabel()
  {
    return getDisplayLabel(null);

  }
 
  public com.runwaysdk.system.scheduler.JobDisplayLabelQuery.JobDisplayLabelQueryStructIF getDisplayLabel(String alias)
  {
    return (com.runwaysdk.system.scheduler.JobDisplayLabelQuery.JobDisplayLabelQueryStructIF)this.attributeFactory(com.runwaysdk.system.scheduler.Job.DISPLAYLABEL, com.runwaysdk.system.metadata.MdAttributeLocalCharacter.CLASS, alias, null);

  }
 
  public com.runwaysdk.system.scheduler.JobDisplayLabelQuery.JobDisplayLabelQueryStructIF getDisplayLabel(String alias, String displayLabel)
  {
    return (com.runwaysdk.system.scheduler.JobDisplayLabelQuery.JobDisplayLabelQueryStructIF)this.attributeFactory(com.runwaysdk.system.scheduler.Job.DISPLAYLABEL, com.runwaysdk.system.metadata.MdAttributeLocalCharacter.CLASS, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableMoment getEndTime()
  {
    return getEndTime(null);

  }
 
  public com.runwaysdk.query.SelectableMoment getEndTime(String alias)
  {
    return (com.runwaysdk.query.SelectableMoment)this.get(com.runwaysdk.system.scheduler.Job.ENDTIME, alias, null);

  }
 
  public com.runwaysdk.query.SelectableMoment getEndTime(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableMoment)this.get(com.runwaysdk.system.scheduler.Job.ENDTIME, alias, displayLabel);

  }
  public com.runwaysdk.system.metadata.MdDomainQuery.MdDomainQueryReferenceIF getEntityDomain()
  {
    return getEntityDomain(null);

  }
 
  public com.runwaysdk.system.metadata.MdDomainQuery.MdDomainQueryReferenceIF getEntityDomain(String alias)
  {
    return (com.runwaysdk.system.metadata.MdDomainQuery.MdDomainQueryReferenceIF)this.get(com.runwaysdk.system.scheduler.Job.ENTITYDOMAIN, alias, null);

  }
 
  public com.runwaysdk.system.metadata.MdDomainQuery.MdDomainQueryReferenceIF getEntityDomain(String alias, String displayLabel)
  {
    return (com.runwaysdk.system.metadata.MdDomainQuery.MdDomainQueryReferenceIF)this.get(com.runwaysdk.system.scheduler.Job.ENTITYDOMAIN,  alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableChar getId()
  {
    return getId(null);

  }
 
  public com.runwaysdk.query.SelectableChar getId(String alias)
  {
    return (com.runwaysdk.query.SelectableChar)this.get(com.runwaysdk.system.scheduler.Job.ID, alias, null);

  }
 
  public com.runwaysdk.query.SelectableChar getId(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableChar)this.get(com.runwaysdk.system.scheduler.Job.ID, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableChar getJobId()
  {
    return getJobId(null);

  }
 
  public com.runwaysdk.query.SelectableChar getJobId(String alias)
  {
    return (com.runwaysdk.query.SelectableChar)this.get(com.runwaysdk.system.scheduler.Job.JOBID, alias, null);

  }
 
  public com.runwaysdk.query.SelectableChar getJobId(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableChar)this.get(com.runwaysdk.system.scheduler.Job.JOBID, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableChar getKeyName()
  {
    return getKeyName(null);

  }
 
  public com.runwaysdk.query.SelectableChar getKeyName(String alias)
  {
    return (com.runwaysdk.query.SelectableChar)this.get(com.runwaysdk.system.scheduler.Job.KEYNAME, alias, null);

  }
 
  public com.runwaysdk.query.SelectableChar getKeyName(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableChar)this.get(com.runwaysdk.system.scheduler.Job.KEYNAME, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableMoment getLastRun()
  {
    return getLastRun(null);

  }
 
  public com.runwaysdk.query.SelectableMoment getLastRun(String alias)
  {
    return (com.runwaysdk.query.SelectableMoment)this.get(com.runwaysdk.system.scheduler.Job.LASTRUN, alias, null);

  }
 
  public com.runwaysdk.query.SelectableMoment getLastRun(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableMoment)this.get(com.runwaysdk.system.scheduler.Job.LASTRUN, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableMoment getLastUpdateDate()
  {
    return getLastUpdateDate(null);

  }
 
  public com.runwaysdk.query.SelectableMoment getLastUpdateDate(String alias)
  {
    return (com.runwaysdk.query.SelectableMoment)this.get(com.runwaysdk.system.scheduler.Job.LASTUPDATEDATE, alias, null);

  }
 
  public com.runwaysdk.query.SelectableMoment getLastUpdateDate(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableMoment)this.get(com.runwaysdk.system.scheduler.Job.LASTUPDATEDATE, alias, displayLabel);

  }
  public com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF getLastUpdatedBy()
  {
    return getLastUpdatedBy(null);

  }
 
  public com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF getLastUpdatedBy(String alias)
  {
    return (com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF)this.get(com.runwaysdk.system.scheduler.Job.LASTUPDATEDBY, alias, null);

  }
 
  public com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF getLastUpdatedBy(String alias, String displayLabel)
  {
    return (com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF)this.get(com.runwaysdk.system.scheduler.Job.LASTUPDATEDBY,  alias, displayLabel);

  }
  public com.runwaysdk.system.UsersQuery.UsersQueryReferenceIF getLockedBy()
  {
    return getLockedBy(null);

  }
 
  public com.runwaysdk.system.UsersQuery.UsersQueryReferenceIF getLockedBy(String alias)
  {
    return (com.runwaysdk.system.UsersQuery.UsersQueryReferenceIF)this.get(com.runwaysdk.system.scheduler.Job.LOCKEDBY, alias, null);

  }
 
  public com.runwaysdk.system.UsersQuery.UsersQueryReferenceIF getLockedBy(String alias, String displayLabel)
  {
    return (com.runwaysdk.system.UsersQuery.UsersQueryReferenceIF)this.get(com.runwaysdk.system.scheduler.Job.LOCKEDBY,  alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableInteger getMaxRetries()
  {
    return getMaxRetries(null);

  }
 
  public com.runwaysdk.query.SelectableInteger getMaxRetries(String alias)
  {
    return (com.runwaysdk.query.SelectableInteger)this.get(com.runwaysdk.system.scheduler.Job.MAXRETRIES, alias, null);

  }
 
  public com.runwaysdk.query.SelectableInteger getMaxRetries(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableInteger)this.get(com.runwaysdk.system.scheduler.Job.MAXRETRIES, alias, displayLabel);

  }
  public com.runwaysdk.system.ActorQuery.ActorQueryReferenceIF getOwner()
  {
    return getOwner(null);

  }
 
  public com.runwaysdk.system.ActorQuery.ActorQueryReferenceIF getOwner(String alias)
  {
    return (com.runwaysdk.system.ActorQuery.ActorQueryReferenceIF)this.get(com.runwaysdk.system.scheduler.Job.OWNER, alias, null);

  }
 
  public com.runwaysdk.system.ActorQuery.ActorQueryReferenceIF getOwner(String alias, String displayLabel)
  {
    return (com.runwaysdk.system.ActorQuery.ActorQueryReferenceIF)this.get(com.runwaysdk.system.scheduler.Job.OWNER,  alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableBoolean getPauseable()
  {
    return getPauseable(null);

  }
 
  public com.runwaysdk.query.SelectableBoolean getPauseable(String alias)
  {
    return (com.runwaysdk.query.SelectableBoolean)this.get(com.runwaysdk.system.scheduler.Job.PAUSEABLE, alias, null);

  }
 
  public com.runwaysdk.query.SelectableBoolean getPauseable(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableBoolean)this.get(com.runwaysdk.system.scheduler.Job.PAUSEABLE, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableBoolean getPaused()
  {
    return getPaused(null);

  }
 
  public com.runwaysdk.query.SelectableBoolean getPaused(String alias)
  {
    return (com.runwaysdk.query.SelectableBoolean)this.get(com.runwaysdk.system.scheduler.Job.PAUSED, alias, null);

  }
 
  public com.runwaysdk.query.SelectableBoolean getPaused(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableBoolean)this.get(com.runwaysdk.system.scheduler.Job.PAUSED, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableBoolean getRemoveOnComplete()
  {
    return getRemoveOnComplete(null);

  }
 
  public com.runwaysdk.query.SelectableBoolean getRemoveOnComplete(String alias)
  {
    return (com.runwaysdk.query.SelectableBoolean)this.get(com.runwaysdk.system.scheduler.Job.REMOVEONCOMPLETE, alias, null);

  }
 
  public com.runwaysdk.query.SelectableBoolean getRemoveOnComplete(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableBoolean)this.get(com.runwaysdk.system.scheduler.Job.REMOVEONCOMPLETE, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableBoolean getRepeated()
  {
    return getRepeated(null);

  }
 
  public com.runwaysdk.query.SelectableBoolean getRepeated(String alias)
  {
    return (com.runwaysdk.query.SelectableBoolean)this.get(com.runwaysdk.system.scheduler.Job.REPEATED, alias, null);

  }
 
  public com.runwaysdk.query.SelectableBoolean getRepeated(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableBoolean)this.get(com.runwaysdk.system.scheduler.Job.REPEATED, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableInteger getRetries()
  {
    return getRetries(null);

  }
 
  public com.runwaysdk.query.SelectableInteger getRetries(String alias)
  {
    return (com.runwaysdk.query.SelectableInteger)this.get(com.runwaysdk.system.scheduler.Job.RETRIES, alias, null);

  }
 
  public com.runwaysdk.query.SelectableInteger getRetries(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableInteger)this.get(com.runwaysdk.system.scheduler.Job.RETRIES, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableBoolean getRunning()
  {
    return getRunning(null);

  }
 
  public com.runwaysdk.query.SelectableBoolean getRunning(String alias)
  {
    return (com.runwaysdk.query.SelectableBoolean)this.get(com.runwaysdk.system.scheduler.Job.RUNNING, alias, null);

  }
 
  public com.runwaysdk.query.SelectableBoolean getRunning(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableBoolean)this.get(com.runwaysdk.system.scheduler.Job.RUNNING, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableLong getSeq()
  {
    return getSeq(null);

  }
 
  public com.runwaysdk.query.SelectableLong getSeq(String alias)
  {
    return (com.runwaysdk.query.SelectableLong)this.get(com.runwaysdk.system.scheduler.Job.SEQ, alias, null);

  }
 
  public com.runwaysdk.query.SelectableLong getSeq(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableLong)this.get(com.runwaysdk.system.scheduler.Job.SEQ, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableChar getSiteMaster()
  {
    return getSiteMaster(null);

  }
 
  public com.runwaysdk.query.SelectableChar getSiteMaster(String alias)
  {
    return (com.runwaysdk.query.SelectableChar)this.get(com.runwaysdk.system.scheduler.Job.SITEMASTER, alias, null);

  }
 
  public com.runwaysdk.query.SelectableChar getSiteMaster(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableChar)this.get(com.runwaysdk.system.scheduler.Job.SITEMASTER, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableMoment getStartTime()
  {
    return getStartTime(null);

  }
 
  public com.runwaysdk.query.SelectableMoment getStartTime(String alias)
  {
    return (com.runwaysdk.query.SelectableMoment)this.get(com.runwaysdk.system.scheduler.Job.STARTTIME, alias, null);

  }
 
  public com.runwaysdk.query.SelectableMoment getStartTime(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableMoment)this.get(com.runwaysdk.system.scheduler.Job.STARTTIME, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableLong getTimeout()
  {
    return getTimeout(null);

  }
 
  public com.runwaysdk.query.SelectableLong getTimeout(String alias)
  {
    return (com.runwaysdk.query.SelectableLong)this.get(com.runwaysdk.system.scheduler.Job.TIMEOUT, alias, null);

  }
 
  public com.runwaysdk.query.SelectableLong getTimeout(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableLong)this.get(com.runwaysdk.system.scheduler.Job.TIMEOUT, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableChar getType()
  {
    return getType(null);

  }
 
  public com.runwaysdk.query.SelectableChar getType(String alias)
  {
    return (com.runwaysdk.query.SelectableChar)this.get(com.runwaysdk.system.scheduler.Job.TYPE, alias, null);

  }
 
  public com.runwaysdk.query.SelectableChar getType(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableChar)this.get(com.runwaysdk.system.scheduler.Job.TYPE, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableInteger getWorkProgress()
  {
    return getWorkProgress(null);

  }
 
  public com.runwaysdk.query.SelectableInteger getWorkProgress(String alias)
  {
    return (com.runwaysdk.query.SelectableInteger)this.get(com.runwaysdk.system.scheduler.Job.WORKPROGRESS, alias, null);

  }
 
  public com.runwaysdk.query.SelectableInteger getWorkProgress(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableInteger)this.get(com.runwaysdk.system.scheduler.Job.WORKPROGRESS, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableInteger getWorkTotal()
  {
    return getWorkTotal(null);

  }
 
  public com.runwaysdk.query.SelectableInteger getWorkTotal(String alias)
  {
    return (com.runwaysdk.query.SelectableInteger)this.get(com.runwaysdk.system.scheduler.Job.WORKTOTAL, alias, null);

  }
 
  public com.runwaysdk.query.SelectableInteger getWorkTotal(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableInteger)this.get(com.runwaysdk.system.scheduler.Job.WORKTOTAL, alias, displayLabel);

  }
  protected com.runwaysdk.query.AttributeReference referenceFactory( com.runwaysdk.dataaccess.MdAttributeRefDAOIF mdAttributeIF, String attributeNamespace, String definingTableName, String definingTableAlias,  com.runwaysdk.dataaccess.MdBusinessDAOIF referenceMdBusinessIF, String referenceTableAlias, com.runwaysdk.query.ComponentQuery rootQuery, java.util.Set<com.runwaysdk.query.Join> tableJoinSet, String userDefinedAlias, String userDefinedDisplayLabel)
  {
    String name = mdAttributeIF.definesAttribute();
    
    if (name.equals(com.runwaysdk.system.scheduler.Job.CREATEDBY)) 
    {
       return new com.runwaysdk.system.SingleActorQuery.SingleActorQueryReference((com.runwaysdk.dataaccess.MdAttributeRefDAOIF)mdAttributeIF, attributeNamespace, definingTableName, definingTableAlias, referenceMdBusinessIF, referenceTableAlias, rootQuery, tableJoinSet, userDefinedAlias, userDefinedDisplayLabel);
    }
    else if (name.equals(com.runwaysdk.system.scheduler.Job.ENTITYDOMAIN)) 
    {
       return new com.runwaysdk.system.metadata.MdDomainQuery.MdDomainQueryReference((com.runwaysdk.dataaccess.MdAttributeRefDAOIF)mdAttributeIF, attributeNamespace, definingTableName, definingTableAlias, referenceMdBusinessIF, referenceTableAlias, rootQuery, tableJoinSet, userDefinedAlias, userDefinedDisplayLabel);
    }
    else if (name.equals(com.runwaysdk.system.scheduler.Job.LASTUPDATEDBY)) 
    {
       return new com.runwaysdk.system.SingleActorQuery.SingleActorQueryReference((com.runwaysdk.dataaccess.MdAttributeRefDAOIF)mdAttributeIF, attributeNamespace, definingTableName, definingTableAlias, referenceMdBusinessIF, referenceTableAlias, rootQuery, tableJoinSet, userDefinedAlias, userDefinedDisplayLabel);
    }
    else if (name.equals(com.runwaysdk.system.scheduler.Job.LOCKEDBY)) 
    {
       return new com.runwaysdk.system.UsersQuery.UsersQueryReference((com.runwaysdk.dataaccess.MdAttributeRefDAOIF)mdAttributeIF, attributeNamespace, definingTableName, definingTableAlias, referenceMdBusinessIF, referenceTableAlias, rootQuery, tableJoinSet, userDefinedAlias, userDefinedDisplayLabel);
    }
    else if (name.equals(com.runwaysdk.system.scheduler.Job.OWNER)) 
    {
       return new com.runwaysdk.system.ActorQuery.ActorQueryReference((com.runwaysdk.dataaccess.MdAttributeRefDAOIF)mdAttributeIF, attributeNamespace, definingTableName, definingTableAlias, referenceMdBusinessIF, referenceTableAlias, rootQuery, tableJoinSet, userDefinedAlias, userDefinedDisplayLabel);
    }
    else 
    {
      String error = "Attribute type ["+mdAttributeIF.getType()+"] is invalid.";
      throw new com.runwaysdk.query.QueryException(error);
    }
  }

  protected com.runwaysdk.query.AttributeLocal localFactory( com.runwaysdk.dataaccess.MdAttributeLocalDAOIF mdAttributeIF, String attributeNamespace, String definingTableName, String definingTableAlias,  com.runwaysdk.dataaccess.MdLocalStructDAOIF mdLocalStructIF, String structTableAlias, com.runwaysdk.query.ComponentQuery rootQuery, java.util.Set<com.runwaysdk.query.Join> tableJoinSet, String userDefinedAlias, String userDefinedDisplayLabel)
  {
    String name = mdAttributeIF.definesAttribute();
    
    if (name.equals(com.runwaysdk.system.scheduler.Job.DISPLAYLABEL)) 
    {
       return new com.runwaysdk.system.scheduler.JobDisplayLabelQuery.JobDisplayLabelQueryStruct((com.runwaysdk.dataaccess.MdAttributeLocalDAOIF)mdAttributeIF,  attributeNamespace, definingTableName, definingTableAlias, mdLocalStructIF, structTableAlias, rootQuery, tableJoinSet, userDefinedAlias, userDefinedDisplayLabel);
    }
    else 
    {
      String error = "Attribute type ["+mdAttributeIF.getType()+"] is invalid.";
      throw new com.runwaysdk.query.QueryException(error);
    }
  }

  }

/**
 * Interface that masks all type unsafe query methods and defines all type safe methods.
 * This type is used when a join is performed on this class as a reference.
 **/
  public interface JobQueryMultiReferenceIF extends com.runwaysdk.query.SelectableMultiReference
  {

    public com.runwaysdk.query.SelectableBoolean getCancelable();
    public com.runwaysdk.query.SelectableBoolean getCancelable(String alias);
    public com.runwaysdk.query.SelectableBoolean getCancelable(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableBoolean getCanceled();
    public com.runwaysdk.query.SelectableBoolean getCanceled(String alias);
    public com.runwaysdk.query.SelectableBoolean getCanceled(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableBoolean getCompleted();
    public com.runwaysdk.query.SelectableBoolean getCompleted(String alias);
    public com.runwaysdk.query.SelectableBoolean getCompleted(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableMoment getCreateDate();
    public com.runwaysdk.query.SelectableMoment getCreateDate(String alias);
    public com.runwaysdk.query.SelectableMoment getCreateDate(String alias, String displayLabel);
    public com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF getCreatedBy();
    public com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF getCreatedBy(String alias);
    public com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF getCreatedBy(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableChar getCronExpression();
    public com.runwaysdk.query.SelectableChar getCronExpression(String alias);
    public com.runwaysdk.query.SelectableChar getCronExpression(String alias, String displayLabel);
    public com.runwaysdk.system.scheduler.JobDisplayLabelQuery.JobDisplayLabelQueryStructIF getDisplayLabel();
    public com.runwaysdk.system.scheduler.JobDisplayLabelQuery.JobDisplayLabelQueryStructIF getDisplayLabel(String alias);
    public com.runwaysdk.system.scheduler.JobDisplayLabelQuery.JobDisplayLabelQueryStructIF getDisplayLabel(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableMoment getEndTime();
    public com.runwaysdk.query.SelectableMoment getEndTime(String alias);
    public com.runwaysdk.query.SelectableMoment getEndTime(String alias, String displayLabel);
    public com.runwaysdk.system.metadata.MdDomainQuery.MdDomainQueryReferenceIF getEntityDomain();
    public com.runwaysdk.system.metadata.MdDomainQuery.MdDomainQueryReferenceIF getEntityDomain(String alias);
    public com.runwaysdk.system.metadata.MdDomainQuery.MdDomainQueryReferenceIF getEntityDomain(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableChar getId();
    public com.runwaysdk.query.SelectableChar getId(String alias);
    public com.runwaysdk.query.SelectableChar getId(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableChar getJobId();
    public com.runwaysdk.query.SelectableChar getJobId(String alias);
    public com.runwaysdk.query.SelectableChar getJobId(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableChar getKeyName();
    public com.runwaysdk.query.SelectableChar getKeyName(String alias);
    public com.runwaysdk.query.SelectableChar getKeyName(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableMoment getLastRun();
    public com.runwaysdk.query.SelectableMoment getLastRun(String alias);
    public com.runwaysdk.query.SelectableMoment getLastRun(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableMoment getLastUpdateDate();
    public com.runwaysdk.query.SelectableMoment getLastUpdateDate(String alias);
    public com.runwaysdk.query.SelectableMoment getLastUpdateDate(String alias, String displayLabel);
    public com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF getLastUpdatedBy();
    public com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF getLastUpdatedBy(String alias);
    public com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF getLastUpdatedBy(String alias, String displayLabel);
    public com.runwaysdk.system.UsersQuery.UsersQueryReferenceIF getLockedBy();
    public com.runwaysdk.system.UsersQuery.UsersQueryReferenceIF getLockedBy(String alias);
    public com.runwaysdk.system.UsersQuery.UsersQueryReferenceIF getLockedBy(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableInteger getMaxRetries();
    public com.runwaysdk.query.SelectableInteger getMaxRetries(String alias);
    public com.runwaysdk.query.SelectableInteger getMaxRetries(String alias, String displayLabel);
    public com.runwaysdk.system.ActorQuery.ActorQueryReferenceIF getOwner();
    public com.runwaysdk.system.ActorQuery.ActorQueryReferenceIF getOwner(String alias);
    public com.runwaysdk.system.ActorQuery.ActorQueryReferenceIF getOwner(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableBoolean getPauseable();
    public com.runwaysdk.query.SelectableBoolean getPauseable(String alias);
    public com.runwaysdk.query.SelectableBoolean getPauseable(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableBoolean getPaused();
    public com.runwaysdk.query.SelectableBoolean getPaused(String alias);
    public com.runwaysdk.query.SelectableBoolean getPaused(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableBoolean getRemoveOnComplete();
    public com.runwaysdk.query.SelectableBoolean getRemoveOnComplete(String alias);
    public com.runwaysdk.query.SelectableBoolean getRemoveOnComplete(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableBoolean getRepeated();
    public com.runwaysdk.query.SelectableBoolean getRepeated(String alias);
    public com.runwaysdk.query.SelectableBoolean getRepeated(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableInteger getRetries();
    public com.runwaysdk.query.SelectableInteger getRetries(String alias);
    public com.runwaysdk.query.SelectableInteger getRetries(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableBoolean getRunning();
    public com.runwaysdk.query.SelectableBoolean getRunning(String alias);
    public com.runwaysdk.query.SelectableBoolean getRunning(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableLong getSeq();
    public com.runwaysdk.query.SelectableLong getSeq(String alias);
    public com.runwaysdk.query.SelectableLong getSeq(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableChar getSiteMaster();
    public com.runwaysdk.query.SelectableChar getSiteMaster(String alias);
    public com.runwaysdk.query.SelectableChar getSiteMaster(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableMoment getStartTime();
    public com.runwaysdk.query.SelectableMoment getStartTime(String alias);
    public com.runwaysdk.query.SelectableMoment getStartTime(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableLong getTimeout();
    public com.runwaysdk.query.SelectableLong getTimeout(String alias);
    public com.runwaysdk.query.SelectableLong getTimeout(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableChar getType();
    public com.runwaysdk.query.SelectableChar getType(String alias);
    public com.runwaysdk.query.SelectableChar getType(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableInteger getWorkProgress();
    public com.runwaysdk.query.SelectableInteger getWorkProgress(String alias);
    public com.runwaysdk.query.SelectableInteger getWorkProgress(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableInteger getWorkTotal();
    public com.runwaysdk.query.SelectableInteger getWorkTotal(String alias);
    public com.runwaysdk.query.SelectableInteger getWorkTotal(String alias, String displayLabel);

    public com.runwaysdk.query.Condition containsAny(com.runwaysdk.system.scheduler.Job ... job);
    public com.runwaysdk.query.Condition notContainsAny(com.runwaysdk.system.scheduler.Job ... job);
    public com.runwaysdk.query.Condition containsAll(com.runwaysdk.system.scheduler.Job ... job);
    public com.runwaysdk.query.Condition notContainsAll(com.runwaysdk.system.scheduler.Job ... job);
    public com.runwaysdk.query.Condition containsExactly(com.runwaysdk.system.scheduler.Job ... job);
  }

/**
 * Implements type safe query methods.
 * This type is used when a join is performed on this class as a reference.
 **/
  public static class JobQueryMultiReference extends com.runwaysdk.query.AttributeMultiReference
 implements JobQueryMultiReferenceIF

  {

  public JobQueryMultiReference(com.runwaysdk.dataaccess.MdAttributeMultiReferenceDAOIF mdAttributeIF, String attributeNamespace, String definingTableName, String definingTableAlias, String mdMultiReferenceTableName, com.runwaysdk.dataaccess.MdBusinessDAOIF referenceMdBusinessIF, String referenceTableAlias, com.runwaysdk.query.ComponentQuery rootQuery, java.util.Set<com.runwaysdk.query.Join> tableJoinSet, String alias, String displayLabel)
  {
    super(mdAttributeIF, attributeNamespace, definingTableName, definingTableAlias, mdMultiReferenceTableName, referenceMdBusinessIF, referenceTableAlias, rootQuery, tableJoinSet, alias, displayLabel);

  }



    public com.runwaysdk.query.Condition containsAny(com.runwaysdk.system.scheduler.Job ... job)  {

      String[] itemIdArray = new String[job.length]; 

      for (int i=0; i<job.length; i++)
      {
        itemIdArray[i] = job[i].getId();
      }

      return this.containsAny(itemIdArray);
  }

    public com.runwaysdk.query.Condition notContainsAny(com.runwaysdk.system.scheduler.Job ... job)  {

      String[] itemIdArray = new String[job.length]; 

      for (int i=0; i<job.length; i++)
      {
        itemIdArray[i] = job[i].getId();
      }

      return this.notContainsAny(itemIdArray);
  }

    public com.runwaysdk.query.Condition containsAll(com.runwaysdk.system.scheduler.Job ... job)  {

      String[] itemIdArray = new String[job.length]; 

      for (int i=0; i<job.length; i++)
      {
        itemIdArray[i] = job[i].getId();
      }

      return this.containsAll(itemIdArray);
  }

    public com.runwaysdk.query.Condition notContainsAll(com.runwaysdk.system.scheduler.Job ... job)  {

      String[] itemIdArray = new String[job.length]; 

      for (int i=0; i<job.length; i++)
      {
        itemIdArray[i] = job[i].getId();
      }

      return this.notContainsAll(itemIdArray);
  }

    public com.runwaysdk.query.Condition containsExactly(com.runwaysdk.system.scheduler.Job ... job)  {

      String[] itemIdArray = new String[job.length]; 

      for (int i=0; i<job.length; i++)
      {
        itemIdArray[i] = job[i].getId();
      }

      return this.containsExactly(itemIdArray);
  }
  public com.runwaysdk.query.SelectableBoolean getCancelable()
  {
    return getCancelable(null);

  }
 
  public com.runwaysdk.query.SelectableBoolean getCancelable(String alias)
  {
    return (com.runwaysdk.query.SelectableBoolean)this.get(com.runwaysdk.system.scheduler.Job.CANCELABLE, alias, null);

  }
 
  public com.runwaysdk.query.SelectableBoolean getCancelable(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableBoolean)this.get(com.runwaysdk.system.scheduler.Job.CANCELABLE, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableBoolean getCanceled()
  {
    return getCanceled(null);

  }
 
  public com.runwaysdk.query.SelectableBoolean getCanceled(String alias)
  {
    return (com.runwaysdk.query.SelectableBoolean)this.get(com.runwaysdk.system.scheduler.Job.CANCELED, alias, null);

  }
 
  public com.runwaysdk.query.SelectableBoolean getCanceled(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableBoolean)this.get(com.runwaysdk.system.scheduler.Job.CANCELED, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableBoolean getCompleted()
  {
    return getCompleted(null);

  }
 
  public com.runwaysdk.query.SelectableBoolean getCompleted(String alias)
  {
    return (com.runwaysdk.query.SelectableBoolean)this.get(com.runwaysdk.system.scheduler.Job.COMPLETED, alias, null);

  }
 
  public com.runwaysdk.query.SelectableBoolean getCompleted(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableBoolean)this.get(com.runwaysdk.system.scheduler.Job.COMPLETED, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableMoment getCreateDate()
  {
    return getCreateDate(null);

  }
 
  public com.runwaysdk.query.SelectableMoment getCreateDate(String alias)
  {
    return (com.runwaysdk.query.SelectableMoment)this.get(com.runwaysdk.system.scheduler.Job.CREATEDATE, alias, null);

  }
 
  public com.runwaysdk.query.SelectableMoment getCreateDate(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableMoment)this.get(com.runwaysdk.system.scheduler.Job.CREATEDATE, alias, displayLabel);

  }
  public com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF getCreatedBy()
  {
    return getCreatedBy(null);

  }
 
  public com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF getCreatedBy(String alias)
  {
    return (com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF)this.get(com.runwaysdk.system.scheduler.Job.CREATEDBY, alias, null);

  }
 
  public com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF getCreatedBy(String alias, String displayLabel)
  {
    return (com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF)this.get(com.runwaysdk.system.scheduler.Job.CREATEDBY,  alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableChar getCronExpression()
  {
    return getCronExpression(null);

  }
 
  public com.runwaysdk.query.SelectableChar getCronExpression(String alias)
  {
    return (com.runwaysdk.query.SelectableChar)this.get(com.runwaysdk.system.scheduler.Job.CRONEXPRESSION, alias, null);

  }
 
  public com.runwaysdk.query.SelectableChar getCronExpression(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableChar)this.get(com.runwaysdk.system.scheduler.Job.CRONEXPRESSION, alias, displayLabel);

  }
  public com.runwaysdk.system.scheduler.JobDisplayLabelQuery.JobDisplayLabelQueryStructIF getDisplayLabel()
  {
    return getDisplayLabel(null);

  }
 
  public com.runwaysdk.system.scheduler.JobDisplayLabelQuery.JobDisplayLabelQueryStructIF getDisplayLabel(String alias)
  {
    return (com.runwaysdk.system.scheduler.JobDisplayLabelQuery.JobDisplayLabelQueryStructIF)this.attributeFactory(com.runwaysdk.system.scheduler.Job.DISPLAYLABEL, com.runwaysdk.system.metadata.MdAttributeLocalCharacter.CLASS, alias, null);

  }
 
  public com.runwaysdk.system.scheduler.JobDisplayLabelQuery.JobDisplayLabelQueryStructIF getDisplayLabel(String alias, String displayLabel)
  {
    return (com.runwaysdk.system.scheduler.JobDisplayLabelQuery.JobDisplayLabelQueryStructIF)this.attributeFactory(com.runwaysdk.system.scheduler.Job.DISPLAYLABEL, com.runwaysdk.system.metadata.MdAttributeLocalCharacter.CLASS, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableMoment getEndTime()
  {
    return getEndTime(null);

  }
 
  public com.runwaysdk.query.SelectableMoment getEndTime(String alias)
  {
    return (com.runwaysdk.query.SelectableMoment)this.get(com.runwaysdk.system.scheduler.Job.ENDTIME, alias, null);

  }
 
  public com.runwaysdk.query.SelectableMoment getEndTime(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableMoment)this.get(com.runwaysdk.system.scheduler.Job.ENDTIME, alias, displayLabel);

  }
  public com.runwaysdk.system.metadata.MdDomainQuery.MdDomainQueryReferenceIF getEntityDomain()
  {
    return getEntityDomain(null);

  }
 
  public com.runwaysdk.system.metadata.MdDomainQuery.MdDomainQueryReferenceIF getEntityDomain(String alias)
  {
    return (com.runwaysdk.system.metadata.MdDomainQuery.MdDomainQueryReferenceIF)this.get(com.runwaysdk.system.scheduler.Job.ENTITYDOMAIN, alias, null);

  }
 
  public com.runwaysdk.system.metadata.MdDomainQuery.MdDomainQueryReferenceIF getEntityDomain(String alias, String displayLabel)
  {
    return (com.runwaysdk.system.metadata.MdDomainQuery.MdDomainQueryReferenceIF)this.get(com.runwaysdk.system.scheduler.Job.ENTITYDOMAIN,  alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableChar getId()
  {
    return getId(null);

  }
 
  public com.runwaysdk.query.SelectableChar getId(String alias)
  {
    return (com.runwaysdk.query.SelectableChar)this.get(com.runwaysdk.system.scheduler.Job.ID, alias, null);

  }
 
  public com.runwaysdk.query.SelectableChar getId(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableChar)this.get(com.runwaysdk.system.scheduler.Job.ID, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableChar getJobId()
  {
    return getJobId(null);

  }
 
  public com.runwaysdk.query.SelectableChar getJobId(String alias)
  {
    return (com.runwaysdk.query.SelectableChar)this.get(com.runwaysdk.system.scheduler.Job.JOBID, alias, null);

  }
 
  public com.runwaysdk.query.SelectableChar getJobId(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableChar)this.get(com.runwaysdk.system.scheduler.Job.JOBID, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableChar getKeyName()
  {
    return getKeyName(null);

  }
 
  public com.runwaysdk.query.SelectableChar getKeyName(String alias)
  {
    return (com.runwaysdk.query.SelectableChar)this.get(com.runwaysdk.system.scheduler.Job.KEYNAME, alias, null);

  }
 
  public com.runwaysdk.query.SelectableChar getKeyName(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableChar)this.get(com.runwaysdk.system.scheduler.Job.KEYNAME, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableMoment getLastRun()
  {
    return getLastRun(null);

  }
 
  public com.runwaysdk.query.SelectableMoment getLastRun(String alias)
  {
    return (com.runwaysdk.query.SelectableMoment)this.get(com.runwaysdk.system.scheduler.Job.LASTRUN, alias, null);

  }
 
  public com.runwaysdk.query.SelectableMoment getLastRun(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableMoment)this.get(com.runwaysdk.system.scheduler.Job.LASTRUN, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableMoment getLastUpdateDate()
  {
    return getLastUpdateDate(null);

  }
 
  public com.runwaysdk.query.SelectableMoment getLastUpdateDate(String alias)
  {
    return (com.runwaysdk.query.SelectableMoment)this.get(com.runwaysdk.system.scheduler.Job.LASTUPDATEDATE, alias, null);

  }
 
  public com.runwaysdk.query.SelectableMoment getLastUpdateDate(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableMoment)this.get(com.runwaysdk.system.scheduler.Job.LASTUPDATEDATE, alias, displayLabel);

  }
  public com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF getLastUpdatedBy()
  {
    return getLastUpdatedBy(null);

  }
 
  public com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF getLastUpdatedBy(String alias)
  {
    return (com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF)this.get(com.runwaysdk.system.scheduler.Job.LASTUPDATEDBY, alias, null);

  }
 
  public com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF getLastUpdatedBy(String alias, String displayLabel)
  {
    return (com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF)this.get(com.runwaysdk.system.scheduler.Job.LASTUPDATEDBY,  alias, displayLabel);

  }
  public com.runwaysdk.system.UsersQuery.UsersQueryReferenceIF getLockedBy()
  {
    return getLockedBy(null);

  }
 
  public com.runwaysdk.system.UsersQuery.UsersQueryReferenceIF getLockedBy(String alias)
  {
    return (com.runwaysdk.system.UsersQuery.UsersQueryReferenceIF)this.get(com.runwaysdk.system.scheduler.Job.LOCKEDBY, alias, null);

  }
 
  public com.runwaysdk.system.UsersQuery.UsersQueryReferenceIF getLockedBy(String alias, String displayLabel)
  {
    return (com.runwaysdk.system.UsersQuery.UsersQueryReferenceIF)this.get(com.runwaysdk.system.scheduler.Job.LOCKEDBY,  alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableInteger getMaxRetries()
  {
    return getMaxRetries(null);

  }
 
  public com.runwaysdk.query.SelectableInteger getMaxRetries(String alias)
  {
    return (com.runwaysdk.query.SelectableInteger)this.get(com.runwaysdk.system.scheduler.Job.MAXRETRIES, alias, null);

  }
 
  public com.runwaysdk.query.SelectableInteger getMaxRetries(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableInteger)this.get(com.runwaysdk.system.scheduler.Job.MAXRETRIES, alias, displayLabel);

  }
  public com.runwaysdk.system.ActorQuery.ActorQueryReferenceIF getOwner()
  {
    return getOwner(null);

  }
 
  public com.runwaysdk.system.ActorQuery.ActorQueryReferenceIF getOwner(String alias)
  {
    return (com.runwaysdk.system.ActorQuery.ActorQueryReferenceIF)this.get(com.runwaysdk.system.scheduler.Job.OWNER, alias, null);

  }
 
  public com.runwaysdk.system.ActorQuery.ActorQueryReferenceIF getOwner(String alias, String displayLabel)
  {
    return (com.runwaysdk.system.ActorQuery.ActorQueryReferenceIF)this.get(com.runwaysdk.system.scheduler.Job.OWNER,  alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableBoolean getPauseable()
  {
    return getPauseable(null);

  }
 
  public com.runwaysdk.query.SelectableBoolean getPauseable(String alias)
  {
    return (com.runwaysdk.query.SelectableBoolean)this.get(com.runwaysdk.system.scheduler.Job.PAUSEABLE, alias, null);

  }
 
  public com.runwaysdk.query.SelectableBoolean getPauseable(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableBoolean)this.get(com.runwaysdk.system.scheduler.Job.PAUSEABLE, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableBoolean getPaused()
  {
    return getPaused(null);

  }
 
  public com.runwaysdk.query.SelectableBoolean getPaused(String alias)
  {
    return (com.runwaysdk.query.SelectableBoolean)this.get(com.runwaysdk.system.scheduler.Job.PAUSED, alias, null);

  }
 
  public com.runwaysdk.query.SelectableBoolean getPaused(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableBoolean)this.get(com.runwaysdk.system.scheduler.Job.PAUSED, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableBoolean getRemoveOnComplete()
  {
    return getRemoveOnComplete(null);

  }
 
  public com.runwaysdk.query.SelectableBoolean getRemoveOnComplete(String alias)
  {
    return (com.runwaysdk.query.SelectableBoolean)this.get(com.runwaysdk.system.scheduler.Job.REMOVEONCOMPLETE, alias, null);

  }
 
  public com.runwaysdk.query.SelectableBoolean getRemoveOnComplete(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableBoolean)this.get(com.runwaysdk.system.scheduler.Job.REMOVEONCOMPLETE, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableBoolean getRepeated()
  {
    return getRepeated(null);

  }
 
  public com.runwaysdk.query.SelectableBoolean getRepeated(String alias)
  {
    return (com.runwaysdk.query.SelectableBoolean)this.get(com.runwaysdk.system.scheduler.Job.REPEATED, alias, null);

  }
 
  public com.runwaysdk.query.SelectableBoolean getRepeated(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableBoolean)this.get(com.runwaysdk.system.scheduler.Job.REPEATED, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableInteger getRetries()
  {
    return getRetries(null);

  }
 
  public com.runwaysdk.query.SelectableInteger getRetries(String alias)
  {
    return (com.runwaysdk.query.SelectableInteger)this.get(com.runwaysdk.system.scheduler.Job.RETRIES, alias, null);

  }
 
  public com.runwaysdk.query.SelectableInteger getRetries(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableInteger)this.get(com.runwaysdk.system.scheduler.Job.RETRIES, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableBoolean getRunning()
  {
    return getRunning(null);

  }
 
  public com.runwaysdk.query.SelectableBoolean getRunning(String alias)
  {
    return (com.runwaysdk.query.SelectableBoolean)this.get(com.runwaysdk.system.scheduler.Job.RUNNING, alias, null);

  }
 
  public com.runwaysdk.query.SelectableBoolean getRunning(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableBoolean)this.get(com.runwaysdk.system.scheduler.Job.RUNNING, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableLong getSeq()
  {
    return getSeq(null);

  }
 
  public com.runwaysdk.query.SelectableLong getSeq(String alias)
  {
    return (com.runwaysdk.query.SelectableLong)this.get(com.runwaysdk.system.scheduler.Job.SEQ, alias, null);

  }
 
  public com.runwaysdk.query.SelectableLong getSeq(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableLong)this.get(com.runwaysdk.system.scheduler.Job.SEQ, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableChar getSiteMaster()
  {
    return getSiteMaster(null);

  }
 
  public com.runwaysdk.query.SelectableChar getSiteMaster(String alias)
  {
    return (com.runwaysdk.query.SelectableChar)this.get(com.runwaysdk.system.scheduler.Job.SITEMASTER, alias, null);

  }
 
  public com.runwaysdk.query.SelectableChar getSiteMaster(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableChar)this.get(com.runwaysdk.system.scheduler.Job.SITEMASTER, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableMoment getStartTime()
  {
    return getStartTime(null);

  }
 
  public com.runwaysdk.query.SelectableMoment getStartTime(String alias)
  {
    return (com.runwaysdk.query.SelectableMoment)this.get(com.runwaysdk.system.scheduler.Job.STARTTIME, alias, null);

  }
 
  public com.runwaysdk.query.SelectableMoment getStartTime(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableMoment)this.get(com.runwaysdk.system.scheduler.Job.STARTTIME, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableLong getTimeout()
  {
    return getTimeout(null);

  }
 
  public com.runwaysdk.query.SelectableLong getTimeout(String alias)
  {
    return (com.runwaysdk.query.SelectableLong)this.get(com.runwaysdk.system.scheduler.Job.TIMEOUT, alias, null);

  }
 
  public com.runwaysdk.query.SelectableLong getTimeout(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableLong)this.get(com.runwaysdk.system.scheduler.Job.TIMEOUT, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableChar getType()
  {
    return getType(null);

  }
 
  public com.runwaysdk.query.SelectableChar getType(String alias)
  {
    return (com.runwaysdk.query.SelectableChar)this.get(com.runwaysdk.system.scheduler.Job.TYPE, alias, null);

  }
 
  public com.runwaysdk.query.SelectableChar getType(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableChar)this.get(com.runwaysdk.system.scheduler.Job.TYPE, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableInteger getWorkProgress()
  {
    return getWorkProgress(null);

  }
 
  public com.runwaysdk.query.SelectableInteger getWorkProgress(String alias)
  {
    return (com.runwaysdk.query.SelectableInteger)this.get(com.runwaysdk.system.scheduler.Job.WORKPROGRESS, alias, null);

  }
 
  public com.runwaysdk.query.SelectableInteger getWorkProgress(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableInteger)this.get(com.runwaysdk.system.scheduler.Job.WORKPROGRESS, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableInteger getWorkTotal()
  {
    return getWorkTotal(null);

  }
 
  public com.runwaysdk.query.SelectableInteger getWorkTotal(String alias)
  {
    return (com.runwaysdk.query.SelectableInteger)this.get(com.runwaysdk.system.scheduler.Job.WORKTOTAL, alias, null);

  }
 
  public com.runwaysdk.query.SelectableInteger getWorkTotal(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableInteger)this.get(com.runwaysdk.system.scheduler.Job.WORKTOTAL, alias, displayLabel);

  }
  protected com.runwaysdk.query.AttributeReference referenceFactory( com.runwaysdk.dataaccess.MdAttributeRefDAOIF mdAttributeIF, String attributeNamespace, String definingTableName, String definingTableAlias,  com.runwaysdk.dataaccess.MdBusinessDAOIF referenceMdBusinessIF, String referenceTableAlias, com.runwaysdk.query.ComponentQuery rootQuery, java.util.Set<com.runwaysdk.query.Join> tableJoinSet, String userDefinedAlias, String userDefinedDisplayLabel)
  {
    String name = mdAttributeIF.definesAttribute();
    
    if (name.equals(com.runwaysdk.system.scheduler.Job.CREATEDBY)) 
    {
       return new com.runwaysdk.system.SingleActorQuery.SingleActorQueryReference((com.runwaysdk.dataaccess.MdAttributeRefDAOIF)mdAttributeIF, attributeNamespace, definingTableName, definingTableAlias, referenceMdBusinessIF, referenceTableAlias, rootQuery, tableJoinSet, userDefinedAlias, userDefinedDisplayLabel);
    }
    else if (name.equals(com.runwaysdk.system.scheduler.Job.ENTITYDOMAIN)) 
    {
       return new com.runwaysdk.system.metadata.MdDomainQuery.MdDomainQueryReference((com.runwaysdk.dataaccess.MdAttributeRefDAOIF)mdAttributeIF, attributeNamespace, definingTableName, definingTableAlias, referenceMdBusinessIF, referenceTableAlias, rootQuery, tableJoinSet, userDefinedAlias, userDefinedDisplayLabel);
    }
    else if (name.equals(com.runwaysdk.system.scheduler.Job.LASTUPDATEDBY)) 
    {
       return new com.runwaysdk.system.SingleActorQuery.SingleActorQueryReference((com.runwaysdk.dataaccess.MdAttributeRefDAOIF)mdAttributeIF, attributeNamespace, definingTableName, definingTableAlias, referenceMdBusinessIF, referenceTableAlias, rootQuery, tableJoinSet, userDefinedAlias, userDefinedDisplayLabel);
    }
    else if (name.equals(com.runwaysdk.system.scheduler.Job.LOCKEDBY)) 
    {
       return new com.runwaysdk.system.UsersQuery.UsersQueryReference((com.runwaysdk.dataaccess.MdAttributeRefDAOIF)mdAttributeIF, attributeNamespace, definingTableName, definingTableAlias, referenceMdBusinessIF, referenceTableAlias, rootQuery, tableJoinSet, userDefinedAlias, userDefinedDisplayLabel);
    }
    else if (name.equals(com.runwaysdk.system.scheduler.Job.OWNER)) 
    {
       return new com.runwaysdk.system.ActorQuery.ActorQueryReference((com.runwaysdk.dataaccess.MdAttributeRefDAOIF)mdAttributeIF, attributeNamespace, definingTableName, definingTableAlias, referenceMdBusinessIF, referenceTableAlias, rootQuery, tableJoinSet, userDefinedAlias, userDefinedDisplayLabel);
    }
    else 
    {
      String error = "Attribute type ["+mdAttributeIF.getType()+"] is invalid.";
      throw new com.runwaysdk.query.QueryException(error);
    }
  }

  protected com.runwaysdk.query.AttributeLocal localFactory( com.runwaysdk.dataaccess.MdAttributeLocalDAOIF mdAttributeIF, String attributeNamespace, String definingTableName, String definingTableAlias,  com.runwaysdk.dataaccess.MdLocalStructDAOIF mdLocalStructIF, String structTableAlias, com.runwaysdk.query.ComponentQuery rootQuery, java.util.Set<com.runwaysdk.query.Join> tableJoinSet, String userDefinedAlias, String userDefinedDisplayLabel)
  {
    String name = mdAttributeIF.definesAttribute();
    
    if (name.equals(com.runwaysdk.system.scheduler.Job.DISPLAYLABEL)) 
    {
       return new com.runwaysdk.system.scheduler.JobDisplayLabelQuery.JobDisplayLabelQueryStruct((com.runwaysdk.dataaccess.MdAttributeLocalDAOIF)mdAttributeIF,  attributeNamespace, definingTableName, definingTableAlias, mdLocalStructIF, structTableAlias, rootQuery, tableJoinSet, userDefinedAlias, userDefinedDisplayLabel);
    }
    else 
    {
      String error = "Attribute type ["+mdAttributeIF.getType()+"] is invalid.";
      throw new com.runwaysdk.query.QueryException(error);
    }
  }

  }
}
