~~
~~ Copyright (c) 2013 TerraFrame, Inc. All rights reserved. 
~~   
~~ This file is part of Runway SDK(tm).
~~ 
~~ Runway SDK(tm) is free software: you can redistribute it and/or modify
~~ it under the terms of the GNU Lesser General Public License as
~~ published by the Free Software Foundation, either version 3 of the
~~ License, or (at your option) any later version.
~~ 
~~ Runway SDK(tm) is distributed in the hope that it will be useful, but
~~ WITHOUT ANY WARRANTY; without even the implied warranty of
~~ MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
~~ GNU Lesser General Public License for more details.
~~ 
~~ You should have received a copy of the GNU Lesser General Public
~~ License along with Runway SDK(tm).  If not, see <http://www.gnu.org/licenses/>.
~~

Your First Runway SDK Web App

  This tutorial will walk you through the basics for getting started with a new web application project using Runway SDK. At the end of this tutorial you will have a working sample hello world demo application. Before proceeding make sure that your machine meets the prerequisites defined in {{{./../usage.html}Usage}}.


* Maven Archetype Generate
  
  Using Maven, the next step is to generate a Maven project from archetype. This can be done in Eclipse using the M2E plugin:
  
+-----+
File -> New -> Project -> Maven Project -> Next -> Configure
+-----+
  
  You need to add a remote catalog for Runway SDK:
  
+-----+
http://terraframe.com:8081/nexus/content/repositories/snapshots/archetype-catalog.xml
+-----+
  
  Alternatively, this can also be done via command line:
  
+-----+
mvn archetype:generate                          \
  -DarchetypeGroupId=com.runwaysdk              \
  -DarchetypeArtifactId=runwaysdk-archetype     \
  -DarchetypeVersion=0.0.2-SNAPSHOT             \
  -DgroupId=your.groupId                        \
  -DartifactId=your.artifactId                  \
  -Dversion=0.0.1-SNAPSHOT                      \
  -DarchetypeCatalog=http://terraframe.com:8081/nexus/content/repositories/snapshots/archetype-catalog.xml
+-----+
  
  Then import into Eclipse using (File -> Import -> Existing Maven Project).


* Configure Runway SDK
  
  * Runwaysdk assumes your database root credentials are postgres::postgres (user::pass). You can change this in your project pom.xml file.
  
  * Runwaysdk connects to your database via port 5432. You can change this via

+------+  
(Java Resources) -> src/main/resources/default/server/database.properties
+------+


* Run With Cargo
  
  In your generated project, open launches/boot. You should see the launch configuration:

+------+
mvn clean verify cargo:run -P rebuild-database,import-schema
+------+

  Right click -> Run as -> mvn ...
  
  This launch will first rebuild the database, then install some example application metadata via import-schema, then it will use Cargo (org.codehaus) to automatically download Tomcat and launch your web application.


* What Next?
  
  This little tutorial showed you how to run a prebuilt Runway application. The next step is to {{{./../metadata.html}learn how to define custom Runway classes using metadata.}}
  