package com.runwaysdk.system.metadata;

@com.runwaysdk.business.ClassSignature(hash = -625700517)
/**
 * This class is generated automatically.
 * DO NOT MAKE CHANGES TO IT - THEY WILL BE OVERWRITTEN
 * Custom business logic should be added to MdTable.java
 *
 * @author Autogenerated by RunwaySDK
 */
public abstract class MdTableBase extends com.runwaysdk.system.metadata.MdClass
{
  public final static String CLASS = "com.runwaysdk.system.metadata.MdTable";
  public static java.lang.String TABLENAME = "tableName";
  private static final long serialVersionUID = -625700517;
  
  public MdTableBase()
  {
    super();
  }
  
  public String getTableName()
  {
    return getValue(TABLENAME);
  }
  
  public void validateTableName()
  {
    this.validateAttribute(TABLENAME);
  }
  
  public static com.runwaysdk.dataaccess.MdAttributeCharacterDAOIF getTableNameMd()
  {
    com.runwaysdk.dataaccess.MdClassDAOIF mdClassIF = com.runwaysdk.dataaccess.metadata.MdClassDAO.getMdClassDAO(com.runwaysdk.system.metadata.MdTable.CLASS);
    return (com.runwaysdk.dataaccess.MdAttributeCharacterDAOIF)mdClassIF.definesAttribute(TABLENAME);
  }
  
  protected String getDeclaredType()
  {
    return CLASS;
  }
  
  public static MdTable get(String id)
  {
    return (MdTable) com.runwaysdk.business.Business.get(id);
  }
  
  public static MdTable getByKey(String key)
  {
    return (MdTable) com.runwaysdk.business.Business.get(CLASS, key);
  }
  
  public static MdTable lock(java.lang.String id)
  {
    MdTable _instance = MdTable.get(id);
    _instance.lock();
    
    return _instance;
  }
  
  public static MdTable unlock(java.lang.String id)
  {
    MdTable _instance = MdTable.get(id);
    _instance.unlock();
    
    return _instance;
  }
  
  public String toString()
  {
    if (this.isNew())
    {
      return "New: "+ this.getClassDisplayLabel();
    }
    else
    {
      return super.toString();
    }
  }
}
