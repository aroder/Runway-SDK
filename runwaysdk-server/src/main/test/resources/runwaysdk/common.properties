#-------------------------------------------------------------------------------
# Copyright (c) 2013 TerraFrame, Inc. All rights reserved. 
# 
# This file is part of Runway SDK(tm).
# 
# Runway SDK(tm) is free software: you can redistribute it and/or modify
# it under the terms of the GNU Lesser General Public License as
# published by the Free Software Foundation, either version 3 of the
# License, or (at your option) any later version.
# 
# Runway SDK(tm) is distributed in the hope that it will be useful, but
# WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU Lesser General Public License for more details.
# 
# You should have received a copy of the GNU Lesser General Public
# License along with Runway SDK(tm).  If not, see <http://www.gnu.org/licenses/>.
#-------------------------------------------------------------------------------

# Length (in seconds) of session before it expires
sessionTime=1200

#Module dependencies
server.expansion.modules=testExpansion
client.expansion.modules=testExpansion
server.modules.loader=testModuleLoader

locale = en

#Flag denoting if timezone should be taken into account when storing and displaying dates
includeTimezone=false

# web service call timeout in milliseconds (time before error is thrown)
container.webservice.callTimeout=60000

#rmi
rmi.port=1199
java.rmi.service=java:com.runwaysdk.proxy.RemoteAdapter
json.rmi.service=${test.prop.two}/testValue3

# The qualified class of the custom FormatFactory (if null the default is used).
formatFactory.class=

# Boolean denoting if the custom FormatFactory should delegate to the default
# FormatFactory if no Format is found for a given factory call.
formatFactory.delegate=true

environment=develop

local.lib=${project.basedir}/lib

local.bin=${project.basedir}/target/classes
local.pom=${project.basedir}/pom.xml

server.root=${project.basedir}
server.pom=${server.root}/pom.xml
server.src=${server.root}/src/main/java
server.gen.src=${server.root}/src/main/java-gen/common
server.gen.bin=${server.root}/src/main/java-gen/common/bin

client.root=${project.basedir}
client.pom=${client.root}/pom.xml
client.src=${client.root}/src/main/java
client.gen.src=${client.root}/src/main/java-gen/client
client.gen.bin=${client.root}/src/main/java-gen/client/bin

common.root=${project.basedir}
common.pom=${common.root}/pom.xml
common.src=${common.root}/src/main/java
common.gen.src=${common.root}/src/main/java-gen/common
common.gen.bin=${common.root}/src/main/java-gen/common/bin

local.maven.repo=${settings.localRepository}

log.dir=logs/

webapp.root=${project.basedir}/src/main/webapp
jsp.dir=testValue

permission.cache=session/permissionCache/
session.cache=session/sessionCache/

web.dir=webdir/

# Additional aspect path for server compilation, comma delimited
serverAspectPath=

deploy.servlet.jar=${deploy.root}/lib/servlet-api.jar

deploy.webapps.root=${deploy.root}/webapps
deploy.path=${deploy.webapps.root}/${deploy.appname}
deploy.webinf=${deploy.path}/WEB-INF
deploy.javascript.dir=${deploy.path}/js
deploy.css.dir=${deploy.path}/css

deploy.lib=${deploy.webinf}/lib

deploy.classloader.jar=${deploy.root}/lib/runwaySDKTomcatLoader.jar
deploy.bin=${deploy.webinf}/classes
deploy.src=${deploy.webinf}/source

deploy.server.src=${deploy.src}/server
deploy.client.src=${deploy.src}/client
deploy.common.src=${deploy.src}/common

container.url=http://127.0.0.1:8080
container.webinf.url=${container.url}/WEB-INF
container.app.url=testValue

deploy.username=framework
deploy.password=framework
deploy.manager.url=${container.url}/manager

deploy.profile.root=${deploy.bin}
deploy.profile=tomcatTest

#web services
container.webservice.deployURL=${container.app.url}/services/
container.webservice.enable=false


# THIS PROPERTY ONLY EXISTS FOR TESTING, DO NOT USE ANYWHERE ELSE
project.basedir=${project.basedir}