package com.runwaysdk.system;

@com.runwaysdk.business.ClassSignature(hash = 433190118)
/**
 * This class is generated automatically.
 * DO NOT MAKE CHANGES TO IT - THEY WILL BE OVERWRITTEN
 * Custom business logic should be added to Ratio.java
 *
 * @author Autogenerated by RunwaySDK
 */
public abstract class RatioBase extends com.runwaysdk.system.RatioElement
{
  public final static String CLASS = "com.runwaysdk.system.Ratio";
  public static java.lang.String LEFTOPERAND = "leftOperand";
  public static java.lang.String OPERATOR = "operator";
  public static java.lang.String RIGHTOPERAND = "rightOperand";
  private static final long serialVersionUID = 433190118;
  
  public RatioBase()
  {
    super();
  }
  
  public com.runwaysdk.system.RatioElement getLeftOperand()
  {
    if (getValue(LEFTOPERAND).trim().equals(""))
    {
      return null;
    }
    else
    {
      return com.runwaysdk.system.RatioElement.get(getValue(LEFTOPERAND));
    }
  }
  
  public String getLeftOperandId()
  {
    return getValue(LEFTOPERAND);
  }
  
  public void validateLeftOperand()
  {
    this.validateAttribute(LEFTOPERAND);
  }
  
  public static com.runwaysdk.dataaccess.MdAttributeReferenceDAOIF getLeftOperandMd()
  {
    com.runwaysdk.dataaccess.MdClassDAOIF mdClassIF = com.runwaysdk.dataaccess.metadata.MdClassDAO.getMdClassDAO(com.runwaysdk.system.Ratio.CLASS);
    return (com.runwaysdk.dataaccess.MdAttributeReferenceDAOIF)mdClassIF.definesAttribute(LEFTOPERAND);
  }
  
  public void setLeftOperand(com.runwaysdk.system.RatioElement value)
  {
    if(value == null)
    {
      setValue(LEFTOPERAND, "");
    }
    else
    {
      setValue(LEFTOPERAND, value.getId());
    }
  }
  
  @SuppressWarnings("unchecked")
  public java.util.List<com.runwaysdk.system.RatioOperator> getOperator()
  {
    return (java.util.List<com.runwaysdk.system.RatioOperator>) getEnumValues(OPERATOR);
  }
  
  public void addOperator(com.runwaysdk.system.RatioOperator value)
  {
    if(value != null)
    {
      addEnumItem(OPERATOR, value.getId());
    }
  }
  
  public void removeOperator(com.runwaysdk.system.RatioOperator value)
  {
    if(value != null)
    {
      removeEnumItem(OPERATOR, value.getId());
    }
  }
  
  public void clearOperator()
  {
    clearEnum(OPERATOR);
  }
  
  public void validateOperator()
  {
    this.validateAttribute(OPERATOR);
  }
  
  public static com.runwaysdk.dataaccess.MdAttributeEnumerationDAOIF getOperatorMd()
  {
    com.runwaysdk.dataaccess.MdClassDAOIF mdClassIF = com.runwaysdk.dataaccess.metadata.MdClassDAO.getMdClassDAO(com.runwaysdk.system.Ratio.CLASS);
    return (com.runwaysdk.dataaccess.MdAttributeEnumerationDAOIF)mdClassIF.definesAttribute(OPERATOR);
  }
  
  public com.runwaysdk.system.RatioElement getRightOperand()
  {
    if (getValue(RIGHTOPERAND).trim().equals(""))
    {
      return null;
    }
    else
    {
      return com.runwaysdk.system.RatioElement.get(getValue(RIGHTOPERAND));
    }
  }
  
  public String getRightOperandId()
  {
    return getValue(RIGHTOPERAND);
  }
  
  public void validateRightOperand()
  {
    this.validateAttribute(RIGHTOPERAND);
  }
  
  public static com.runwaysdk.dataaccess.MdAttributeReferenceDAOIF getRightOperandMd()
  {
    com.runwaysdk.dataaccess.MdClassDAOIF mdClassIF = com.runwaysdk.dataaccess.metadata.MdClassDAO.getMdClassDAO(com.runwaysdk.system.Ratio.CLASS);
    return (com.runwaysdk.dataaccess.MdAttributeReferenceDAOIF)mdClassIF.definesAttribute(RIGHTOPERAND);
  }
  
  public void setRightOperand(com.runwaysdk.system.RatioElement value)
  {
    if(value == null)
    {
      setValue(RIGHTOPERAND, "");
    }
    else
    {
      setValue(RIGHTOPERAND, value.getId());
    }
  }
  
  protected String getDeclaredType()
  {
    return CLASS;
  }
  
  public static Ratio get(String id)
  {
    return (Ratio) com.runwaysdk.business.Business.get(id);
  }
  
  public static Ratio getByKey(String key)
  {
    return (Ratio) com.runwaysdk.business.Business.get(CLASS, key);
  }
  
  public static Ratio lock(java.lang.String id)
  {
    Ratio _instance = Ratio.get(id);
    _instance.lock();
    
    return _instance;
  }
  
  public static Ratio unlock(java.lang.String id)
  {
    Ratio _instance = Ratio.get(id);
    _instance.unlock();
    
    return _instance;
  }
  
  public String toString()
  {
    if (this.isNew())
    {
      return "New: "+ this.getClassDisplayLabel();
    }
    else
    {
      return super.toString();
    }
  }
}
