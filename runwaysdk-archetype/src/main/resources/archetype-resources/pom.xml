<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>${groupId}</groupId>
  <artifactId>${artifactId}</artifactId>
  <version>${version}</version>
  <packaging>war</packaging>

  <name>A Runway project</name>
  <url>http://www.terraframe.com/products/runwaysdk</url>

  <properties>
    <root.db>postgres</root.db>
    <root.user>postgres</root.user>
    <root.pass>postgres</root.pass>

    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <maven.compiler.source>1.6</maven.compiler.source>
    <maven.compiler.target>1.6</maven.compiler.target>

    <org.aspectj.version>1.6.11</org.aspectj.version>
    <org.codehaus.mojo.version>1.4</org.codehaus.mojo.version>

    <maven.basedir>${basedir}</maven.basedir>
    
    <mvn.server.url>http://terraframe.com:8081/</mvn.server.url>
  </properties>

  <repositories>
    <repository>
      <id>rowlands</id>
      <name>rowlands</name>
      <url>${mvn.server.url}nexus/content/groups/allrepos</url>
      <layout>default</layout>
    </repository>
  </repositories>

  <dependencies>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>4.11</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.aspectj</groupId>
      <artifactId>aspectjrt</artifactId>
      <version>${org.aspectj.version}</version>
    </dependency>
    <dependency>
      <groupId>com.runwaysdk</groupId>
      <artifactId>runwaysdk-client</artifactId>
      <version>0.0.2-SNAPSHOT</version>
    </dependency>
    <dependency>
      <groupId>com.runwaysdk</groupId>
      <artifactId>runwaysdk-server</artifactId>
      <version>0.0.2-SNAPSHOT</version>
    </dependency>
  </dependencies>

  <!-- These profiles allow for Maven execution of Runway-SDK's Java Tools, 
    like rebuilding the database and importing schemas. -->
  <profiles>
    <profile>
      <id>rebuild-database</id>
      <activation>
        <property>
          <name>rebuild-database</name>
        </property>
      </activation>
      <build>
        <plugins>
          <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>exec-maven-plugin</artifactId>
            <version>1.2.1</version>
            <configuration>
              <executable>java</executable>
              <mainClass>com.runwaysdk.dataaccess.InstallerCP</mainClass>
              <arguments>
                <argument>${root.user}</argument>
                <argument>${root.pass}</argument>
                <argument>${root.db}</argument>
                <argument>com/runwaysdk/resources/schema.xsd</argument>
                <argument>com/runwaysdk/resources/metadata.xml</argument>
              </arguments>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>import-schema</id>
      <activation>
        <property>
          <name>import-schema</name>
        </property>
      </activation>
      <build>
        <plugins>
          <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>exec-maven-plugin</artifactId>
            <version>1.2.1</version>
            <configuration>
              <executable>java</executable>
              <mainClass>com.runwaysdk.dataaccess.io.Versioning</mainClass>
              <arguments>
                <argument>src/main/domain/application</argument>
                <argument>com/runwaysdk/resources/version.xsd</argument>
              </arguments>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>new-schema</id>
      <activation>
        <property>
          <name>new-schema</name>
        </property>
      </activation>
      <build>
        <plugins>
          <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>exec-maven-plugin</artifactId>
            <version>1.2.1</version>
            <configuration>
              <executable>java</executable>
              <mainClass>com.runwaysdk.dataaccess.io.CreateDomainModel</mainClass>
              <arguments>
                <argument>${basedir}/src/main/domain/application</argument>
              </arguments>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>
    <!--
    <profile>
      <id>replace-launches</id>
      <activation>
        <property>
          <name>replace-launches</name>
        </property>
      </activation>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-antrun-plugin</artifactId>
            <executions>
                <execution>
                    <id>default-cli</id>
                    <goals>
                      <goal>run</goal>
                    </goals>
                    <configuration>
                      <tasks>
                        <replace token="REPLACE_ME" value="workspace_loc:/${artifactId}" dir="launches">                                 
                          <include name="**/*.launch"/>
                        </replace>
                      </tasks>
                    </configuration>
                </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
    -->
  </profiles>

  <build>
    <sourceDirectory>src/main/java/client</sourceDirectory>

    <finalName>${artifactId}</finalName>

    <!-- This tells maven to resolve variables in our properties files (like 
      maven.basedir) -->
    <resources>
      <resource>
        <directory>src/main/resources</directory>
        <filtering>true</filtering>
      </resource>
    </resources>

    <plugins>
      <!-- This maven plugin copies maven dependencies to the lib directory. 
        (LIB HACK) -->
      <plugin>
        <artifactId>maven-dependency-plugin</artifactId>
        <executions>
          <execution>
            <phase>generate-test-resources</phase>
            <goals>
              <goal>copy-dependencies</goal>
            </goals>
            <configuration>
              <outputDirectory>lib</outputDirectory>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <!-- NOTICE: If you get the error: "Plugin execution not covered by lifecycle 
        configuration: org.codehaus.mojo:build-helper-maven-plugin:1.7:add-source 
        (execution: add-source, phase: generate-sources)" It means you're using M2E 
        (Eclipse's Maven plugin) and you need to install a connector. You can install 
        the connector by: Window -> Preferences -> Maven -> Discovery -> Open Catalog 
        Search for and install the buildhelper connector. Restart Eclipse and it 
        should fix the error. -->
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>build-helper-maven-plugin</artifactId>
        <version>1.7</version>
        <executions>
          <execution>
            <id>add-source</id>
            <phase>generate-sources</phase>
            <goals>
              <goal>add-source</goal>
            </goals>
            <configuration>
              <sources>
                <!-- <source>src/main/java/client</source> -->
                <source>src/main/java/common</source>
                <source>src/main/java/server</source>
                <source>src/main/java-gen/client/base</source>
                <source>src/main/java-gen/client/stub</source>
                <source>src/main/java-gen/common/base</source>
                <source>src/main/java-gen/common/stub</source>
                <source>src/main/java-gen/server/base</source>
                <source>src/main/java-gen/server/stub</source>
              </sources>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <!-- This plugin weaves aspects on build -->
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>aspectj-maven-plugin</artifactId>
        <version>${org.codehaus.mojo.version}</version>
        <dependencies>
          <dependency>
            <groupId>org.aspectj</groupId>
            <artifactId>aspectjtools</artifactId>
            <version>${org.aspectj.version}</version>
          </dependency>
        </dependencies>
        <executions>
          <execution>
            <goals>
              <goal>compile</goal>
              <goal>test-compile</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <aspectLibraries>
            <aspectLibrary>
              <groupId>com.runwaysdk</groupId>
              <artifactId>runwaysdk-server</artifactId>
            </aspectLibrary>
            <aspectLibrary>
              <groupId>com.runwaysdk</groupId>
              <artifactId>runwaysdk-client</artifactId>
            </aspectLibrary>
          </aspectLibraries>
          <weaveDependencies>
            <weaveDependency>
              <groupId>com.runwaysdk</groupId>
              <artifactId>runwaysdk-common</artifactId>
            </weaveDependency>
          </weaveDependencies>
          <source>${maven.compiler.source}</source>
          <target>${maven.compiler.target}</target>
          <fork>true</fork>
          <meminitial>512m</meminitial>
          <maxmem>1024m</maxmem>
        </configuration>
      </plugin>
    </plugins>
    <pluginManagement>
      <plugins>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-eclipse-plugin</artifactId>
          <version>2.9</version>
          <configuration>
            <wtpversion>2.0</wtpversion>
          </configuration>
        </plugin>

        <!--This plugin's configuration is used to store Eclipse m2e settings 
          only. It has no influence on the Maven build itself. -->
        <!-- Autogenerated, this tells M2E to ignore custom maven plugins (currently 
          the antrun plugin) -->
        <plugin>
          <groupId>org.eclipse.m2e</groupId>
          <artifactId>lifecycle-mapping</artifactId>
          <version>1.0.0</version>
          <configuration>
            <lifecycleMappingMetadata>
              <pluginExecutions>
                <pluginExecution>
                  <pluginExecutionFilter>
                    <groupId>
                      org.apache.maven.plugins
                    </groupId>
                    <artifactId>
                      maven-dependency-plugin
                    </artifactId>
                    <versionRange>[2.1,)</versionRange>
                    <goals>
                      <goal>copy-dependencies</goal>
                    </goals>
                  </pluginExecutionFilter>
                  <action>
                    <ignore></ignore>
                  </action>
                </pluginExecution>
                <pluginExecution>
                  <pluginExecutionFilter>
                    <groupId>
                      org.apache.maven.plugins
                    </groupId>
                    <artifactId>
                      maven-antrun-plugin
                    </artifactId>
                    <versionRange>[1.3,)</versionRange>
                    <goals>
                      <goal>run</goal>
                    </goals>
                  </pluginExecutionFilter>
                  <action>
                    <ignore></ignore>
                  </action>
                </pluginExecution>
                <pluginExecution>
                  <pluginExecutionFilter>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>exec-maven-plugin</artifactId>
                    <versionRange>[1.2.1,)</versionRange>
                    <goals>
                      <goal>java</goal>
                    </goals>
                  </pluginExecutionFilter>
                  <action>
                    <ignore></ignore>
                  </action>
                </pluginExecution>
              </pluginExecutions>
            </lifecycleMappingMetadata>
          </configuration>
        </plugin>
      </plugins>
    </pluginManagement>
  </build>
</project>